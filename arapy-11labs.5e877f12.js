function e(){return(e=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)({}).hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(null,arguments)}var n=new Blob(['\n      const BIAS = 0x84;\n      const CLIP = 32635;\n      const encodeTable = [\n        0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,\n        4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n        5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n        5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7\n      ];\n      \n      function encodeSample(sample) {\n        let sign;\n        let exponent;\n        let mantissa;\n        let muLawSample;\n        sign = (sample >> 8) & 0x80;\n        if (sign !== 0) sample = -sample;\n        sample = sample + BIAS;\n        if (sample > CLIP) sample = CLIP;\n        exponent = encodeTable[(sample>>7) & 0xFF];\n        mantissa = (sample >> (exponent+3)) & 0x0F;\n        muLawSample = ~(sign | (exponent << 4) | mantissa);\n        \n        return muLawSample;\n      }\n    \n      class RawAudioProcessor extends AudioWorkletProcessor {\n        constructor() {\n          super();\n                    \n          this.port.onmessage = ({ data }) => {\n            switch (data.type) {\n              case "setFormat":\n                this.isMuted = false;\n                this.buffer = []; // Initialize an empty buffer\n                this.bufferSize = data.sampleRate / 4;\n                this.format = data.format;\n\n                if (globalThis.LibSampleRate && sampleRate !== data.sampleRate) {\n                  globalThis.LibSampleRate.create(1, sampleRate, data.sampleRate).then(resampler => {\n                    this.resampler = resampler;\n                  });\n                }\n                break;\n              case "setMuted":\n                this.isMuted = data.isMuted;\n                break;\n            }\n          };\n        }\n        process(inputs) {\n          if (!this.buffer) {\n            return true;\n          }\n          \n          const input = inputs[0]; // Get the first input node\n          if (input.length > 0) {\n            let channelData = input[0]; // Get the first channel\'s data\n\n            // Resample the audio if necessary\n            if (this.resampler) {\n              channelData = this.resampler.full(channelData);\n            }\n\n            // Add channel data to the buffer\n            this.buffer.push(...channelData);\n            // Get max volume \n            let sum = 0.0;\n            for (let i = 0; i < channelData.length; i++) {\n              sum += channelData[i] * channelData[i];\n            }\n            const maxVolume = Math.sqrt(sum / channelData.length);\n            // Check if buffer size has reached or exceeded the threshold\n            if (this.buffer.length >= this.bufferSize) {\n              const float32Array = this.isMuted \n                ? new Float32Array(this.buffer.length)\n                : new Float32Array(this.buffer);\n\n              let encodedArray = this.format === "ulaw"\n                ? new Uint8Array(float32Array.length)\n                : new Int16Array(float32Array.length);\n\n              // Iterate through the Float32Array and convert each sample to PCM16\n              for (let i = 0; i < float32Array.length; i++) {\n                // Clamp the value to the range [-1, 1]\n                let sample = Math.max(-1, Math.min(1, float32Array[i]));\n\n                // Scale the sample to the range [-32768, 32767]\n                let value = sample < 0 ? sample * 32768 : sample * 32767;\n                if (this.format === "ulaw") {\n                  value = encodeSample(Math.round(value));\n                }\n\n                encodedArray[i] = value;\n              }\n\n              // Send the buffered data to the main script\n              this.port.postMessage([encodedArray, maxVolume]);\n\n              // Clear the buffer after sending\n              this.buffer = [];\n            }\n          }\n          return true; // Continue processing\n        }\n      }\n      registerProcessor("raw-audio-processor", RawAudioProcessor);\n  '],{type:"application/javascript"}),t=URL.createObjectURL(n);function o(){return["iPad Simulator","iPhone Simulator","iPod Simulator","iPad","iPhone","iPod"].includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document}var r=function(){function e(e,n,t,o){this.context=void 0,this.analyser=void 0,this.worklet=void 0,this.inputStream=void 0,this.context=e,this.analyser=n,this.worklet=t,this.inputStream=o}e.create=function(n){var r=n.sampleRate,a=n.format,s=n.preferHeadphonesForIosDevices;try{var i=null,u=null;return Promise.resolve(function(n,c){try{var l=function(){function n(){function n(){return Promise.resolve(i.audioWorklet.addModule(t)).then(function(){return Promise.resolve(navigator.mediaDevices.getUserMedia({audio:c})).then(function(n){var t=i.createMediaStreamSource(u=n),o=new AudioWorkletNode(i,"raw-audio-processor");return o.port.postMessage({type:"setFormat",format:a,sampleRate:r}),t.connect(s),s.connect(o),Promise.resolve(i.resume()).then(function(){return new e(i,s,o,u)})})})}var o=navigator.mediaDevices.getSupportedConstraints().sampleRate,s=(i=new window.AudioContext(o?{sampleRate:r}:{})).createAnalyser(),l=function(){if(!o)return Promise.resolve(i.audioWorklet.addModule("https://cdn.jsdelivr.net/npm/@alexanderolsen/libsamplerate-js@2.1.2/dist/libsamplerate.worklet.js")).then(function(){})}();return l&&l.then?l.then(n):n()}var c={sampleRate:{ideal:r},echoCancellation:{ideal:!0},noiseSuppression:{ideal:!0}},l=function(){if(o()&&s)return Promise.resolve(window.navigator.mediaDevices.enumerateDevices()).then(function(e){var n=e.find(function(e){return"audioinput"===e.kind&&["airpod","headphone","earphone"].find(function(n){return e.label.toLowerCase().includes(n)})});n&&(c.deviceId={ideal:n.deviceId})})}();return l&&l.then?l.then(n):n()}()}catch(e){return c(e)}return l&&l.then?l.then(void 0,c):l}(0,function(e){var n,t;throw null==(n=u)||n.getTracks().forEach(function(e){return e.stop()}),null==(t=i)||t.close(),e}))}catch(e){return Promise.reject(e)}};var n=e.prototype;return n.close=function(){try{return this.inputStream.getTracks().forEach(function(e){return e.stop()}),Promise.resolve(this.context.close()).then(function(){})}catch(e){return Promise.reject(e)}},n.setMuted=function(e){this.worklet.port.postMessage({type:"setMuted",isMuted:e})},e}(),a=new Blob(['\n      const decodeTable = [0,132,396,924,1980,4092,8316,16764];\n      \n      export function decodeSample(muLawSample) {\n        let sign;\n        let exponent;\n        let mantissa;\n        let sample;\n        muLawSample = ~muLawSample;\n        sign = (muLawSample & 0x80);\n        exponent = (muLawSample >> 4) & 0x07;\n        mantissa = muLawSample & 0x0F;\n        sample = decodeTable[exponent] + (mantissa << (exponent+3));\n        if (sign !== 0) sample = -sample;\n\n        return sample;\n      }\n      \n      class AudioConcatProcessor extends AudioWorkletProcessor {\n        constructor() {\n          super();\n          this.buffers = []; // Initialize an empty buffer\n          this.cursor = 0;\n          this.currentBuffer = null;\n          this.wasInterrupted = false;\n          this.finished = false;\n          \n          this.port.onmessage = ({ data }) => {\n            switch (data.type) {\n              case "setFormat":\n                this.format = data.format;\n                break;\n              case "buffer":\n                this.wasInterrupted = false;\n                this.buffers.push(\n                  this.format === "ulaw"\n                    ? new Uint8Array(data.buffer)\n                    : new Int16Array(data.buffer)\n                );\n                break;\n              case "interrupt":\n                this.wasInterrupted = true;\n                break;\n              case "clearInterrupted":\n                if (this.wasInterrupted) {\n                  this.wasInterrupted = false;\n                  this.buffers = [];\n                  this.currentBuffer = null;\n                }\n            }\n          };\n        }\n        process(_, outputs) {\n          let finished = false;\n          const output = outputs[0][0];\n          for (let i = 0; i < output.length; i++) {\n            if (!this.currentBuffer) {\n              if (this.buffers.length === 0) {\n                finished = true;\n                break;\n              }\n              this.currentBuffer = this.buffers.shift();\n              this.cursor = 0;\n            }\n\n            let value = this.currentBuffer[this.cursor];\n            if (this.format === "ulaw") {\n              value = decodeSample(value);\n            }\n            output[i] = value / 32768;\n            this.cursor++;\n\n            if (this.cursor >= this.currentBuffer.length) {\n              this.currentBuffer = null;\n            }\n          }\n\n          if (this.finished !== finished) {\n            this.finished = finished;\n            this.port.postMessage({ type: "process", finished });\n          }\n\n          return true; // Continue processing\n        }\n      }\n\n      registerProcessor("audio-concat-processor", AudioConcatProcessor);\n    '],{type:"application/javascript"}),s=URL.createObjectURL(a),i=function(){function e(e,n,t,o){this.context=void 0,this.analyser=void 0,this.gain=void 0,this.worklet=void 0,this.context=e,this.analyser=n,this.gain=t,this.worklet=o}return e.create=function(n){var t=n.sampleRate,o=n.format;try{var r=null;return Promise.resolve(function(n,a){try{var i,u,c=(i=(r=new AudioContext({sampleRate:t})).createAnalyser(),(u=r.createGain()).connect(i),i.connect(r.destination),Promise.resolve(r.audioWorklet.addModule(s)).then(function(){var n=new AudioWorkletNode(r,"audio-concat-processor");return n.port.postMessage({type:"setFormat",format:o}),n.connect(u),Promise.resolve(r.resume()).then(function(){return new e(r,i,u,n)})}))}catch(e){return a(e)}return c&&c.then?c.then(void 0,a):c}(0,function(e){var n;throw null==(n=r)||n.close(),e}))}catch(e){return Promise.reject(e)}},e.prototype.close=function(){try{return Promise.resolve(this.context.close()).then(function(){})}catch(e){return Promise.reject(e)}},e}(),u=function(){function e(e,n,t,o){var r=this;this.socket=void 0,this.conversationId=void 0,this.inputFormat=void 0,this.outputFormat=void 0,this.queue=[],this.disconnectionDetails=null,this.onDisconnectCallback=null,this.onMessageCallback=null,this.socket=e,this.conversationId=n,this.inputFormat=t,this.outputFormat=o,this.socket.addEventListener("error",function(e){setTimeout(function(){return r.disconnect({reason:"error",message:"The connection was closed due to a socket error.",context:e})},0)}),this.socket.addEventListener("close",function(e){r.disconnect(1e3===e.code?{reason:"agent",context:e}:{reason:"error",message:e.reason||"The connection was closed by the server.",context:e})}),this.socket.addEventListener("message",function(e){try{var n=JSON.parse(e.data);if(!n.type)return;r.onMessageCallback?r.onMessageCallback(n):r.queue.push(n)}catch(e){}})}e.create=function(n){try{var t=null;return Promise.resolve(function(o,r){try{var a,s,i,u,l=(s=null!=(a=n.origin)?a:"wss://api.elevenlabs.io",i=n.signedUrl?n.signedUrl:s+"/v1/convai/conversation?agent_id="+n.agentId,u=["convai"],n.authorization&&u.push("bearer."+n.authorization),t=new WebSocket(i,u),Promise.resolve(new Promise(function(e,o){t.addEventListener("open",function(){var e,o,r,a,s,i={type:"conversation_initiation_client_data"};n.overrides&&(i.conversation_config_override={agent:{prompt:null==(o=n.overrides.agent)?void 0:o.prompt,first_message:null==(r=n.overrides.agent)?void 0:r.firstMessage,language:null==(a=n.overrides.agent)?void 0:a.language},tts:{voice_id:null==(s=n.overrides.tts)?void 0:s.voiceId}}),n.customLlmExtraBody&&(i.custom_llm_extra_body=n.customLlmExtraBody),n.dynamicVariables&&(i.dynamic_variables=n.dynamicVariables),null==(e=t)||e.send(JSON.stringify(i))},{once:!0}),t.addEventListener("error",function(e){setTimeout(function(){return o(e)},0)}),t.addEventListener("close",o),t.addEventListener("message",function(n){var t=JSON.parse(n.data);t.type&&("conversation_initiation_metadata"===t.type?e(t.conversation_initiation_metadata_event):console.warn("First received message is not conversation metadata."))},{once:!0})})).then(function(n){var o=n.conversation_id,r=n.agent_output_audio_format,a=n.user_input_audio_format,s=c(null!=a?a:"pcm_16000"),i=c(r);return new e(t,o,s,i)}))}catch(e){return r(e)}return l&&l.then?l.then(void 0,r):l}(0,function(e){var n;throw null==(n=t)||n.close(),e}))}catch(e){return Promise.reject(e)}};var n=e.prototype;return n.close=function(){this.socket.close()},n.sendMessage=function(e){this.socket.send(JSON.stringify(e))},n.onMessage=function(e){this.onMessageCallback=e,this.queue.forEach(e),this.queue=[]},n.onDisconnect=function(e){this.onDisconnectCallback=e,this.disconnectionDetails&&e(this.disconnectionDetails)},n.disconnect=function(e){var n;this.disconnectionDetails||(this.disconnectionDetails=e,null==(n=this.onDisconnectCallback)||n.call(this,e))},e}();function c(e){var n=e.split("_"),t=n[0],o=n[1];if(!["pcm","ulaw"].includes(t))throw Error("Invalid format: "+e);var r=parseInt(o);if(isNaN(r))throw Error("Invalid sample rate: "+o);return{format:t,sampleRate:r}}function l(e,n){try{var t=e()}catch(e){return n(e)}return t&&t.then?t.then(void 0,n):t}var d={clientTools:{}},h={onConnect:function(){},onDebug:function(){},onDisconnect:function(){},onError:function(){},onMessage:function(){},onAudio:function(){},onModeChange:function(){},onStatusChange:function(){},onCanSendFeedbackChange:function(){}},p=function(){function n(e,n,t,o,r){var a=this,s=this,i=this;this.options=void 0,this.connection=void 0,this.input=void 0,this.output=void 0,this.wakeLock=void 0,this.lastInterruptTimestamp=0,this.mode="listening",this.status="connecting",this.inputFrequencyData=void 0,this.outputFrequencyData=void 0,this.volume=1,this.currentEventId=1,this.lastFeedbackEventId=1,this.canSendFeedback=!1,this.endSession=function(){return i.endSessionWithDetails({reason:"user"})},this.endSessionWithDetails=function(e){try{var n=function(){return a.connection.close(),Promise.resolve(a.input.close()).then(function(){return Promise.resolve(a.output.close()).then(function(){a.updateStatus("disconnected"),a.options.onDisconnect(e)})})};if("connected"!==a.status&&"connecting"!==a.status)return Promise.resolve();a.updateStatus("disconnecting");var t=l(function(){var e;return Promise.resolve(null==(e=a.wakeLock)?void 0:e.release()).then(function(){a.wakeLock=null})},function(){});return Promise.resolve(t&&t.then?t.then(n):n())}catch(e){return Promise.reject(e)}},this.updateMode=function(e){e!==i.mode&&(i.mode=e,i.options.onModeChange({mode:e}))},this.updateStatus=function(e){e!==i.status&&(i.status=e,i.options.onStatusChange({status:e}))},this.updateCanSendFeedback=function(){var e=i.currentEventId!==i.lastFeedbackEventId;i.canSendFeedback!==e&&(i.canSendFeedback=e,i.options.onCanSendFeedbackChange({canSendFeedback:e}))},this.onMessage=function(e){try{switch(e.type){case"interruption":return e.interruption_event&&(s.lastInterruptTimestamp=e.interruption_event.event_id),s.fadeOutAudio(),Promise.resolve();case"agent_response":return s.options.onMessage({source:"ai",message:e.agent_response_event.agent_response}),Promise.resolve();case"user_transcript":return s.options.onMessage({source:"user",message:e.user_transcription_event.user_transcript}),Promise.resolve();case"internal_tentative_agent_response":return s.options.onDebug({type:"tentative_agent_response",response:e.tentative_agent_response_internal_event.tentative_agent_response}),Promise.resolve();case"client_tool_call":return Promise.resolve(function(){if(s.options.clientTools.hasOwnProperty(e.client_tool_call.tool_name)){var n=l(function(){return Promise.resolve(s.options.clientTools[e.client_tool_call.tool_name](e.client_tool_call.parameters)).then(function(n){var t="object"==typeof n?JSON.stringify(n):String(n);s.connection.sendMessage({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:t,is_error:!1})})},function(n){s.onError("Client tool execution failed with following error: "+(null==n?void 0:n.message),{clientToolName:e.client_tool_call.tool_name}),s.connection.sendMessage({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:"Client tool execution failed: "+(null==n?void 0:n.message),is_error:!0})});if(n&&n.then)return n.then(function(){})}else{if(s.options.onUnhandledClientToolCall)return void s.options.onUnhandledClientToolCall(e.client_tool_call);s.onError("Client tool with name "+e.client_tool_call.tool_name+" is not defined on client",{clientToolName:e.client_tool_call.tool_name}),s.connection.sendMessage({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:"Client tool with name "+e.client_tool_call.tool_name+" is not defined on client",is_error:!0})}}());case"audio":return s.lastInterruptTimestamp<=e.audio_event.event_id&&(s.options.onAudio(e.audio_event.audio_base_64),s.addAudioBase64Chunk(e.audio_event.audio_base_64),s.currentEventId=e.audio_event.event_id,s.updateCanSendFeedback(),s.updateMode("speaking")),Promise.resolve();case"ping":return s.connection.sendMessage({type:"pong",event_id:e.ping_event.event_id}),Promise.resolve();default:return s.options.onDebug(e),Promise.resolve()}}catch(e){return Promise.reject(e)}},this.onInputWorkletMessage=function(e){var n;"connected"===i.status&&i.connection.sendMessage({user_audio_chunk:(n=new Uint8Array(e.data[0].buffer),window.btoa(String.fromCharCode.apply(String,n)))})},this.onOutputWorkletMessage=function(e){var n=e.data;"process"===n.type&&i.updateMode(n.finished?"listening":"speaking")},this.addAudioBase64Chunk=function(e){i.output.gain.gain.value=i.volume,i.output.worklet.port.postMessage({type:"clearInterrupted"}),i.output.worklet.port.postMessage({type:"buffer",buffer:function(e){for(var n=window.atob(e),t=n.length,o=new Uint8Array(t),r=0;r<t;r++)o[r]=n.charCodeAt(r);return o.buffer}(e)})},this.fadeOutAudio=function(){i.updateMode("listening"),i.output.worklet.port.postMessage({type:"interrupt"}),i.output.gain.gain.exponentialRampToValueAtTime(1e-4,i.output.context.currentTime+2),setTimeout(function(){i.output.gain.gain.value=i.volume,i.output.worklet.port.postMessage({type:"clearInterrupted"})},2e3)},this.onError=function(e,n){console.error(e,n),i.options.onError(e,n)},this.calculateVolume=function(e){if(0===e.length)return 0;for(var n=0,t=0;t<e.length;t++)n+=e[t]/255;return(n/=e.length)<0?0:n>1?1:n},this.getId=function(){return i.connection.conversationId},this.isOpen=function(){return"connected"===i.status},this.setVolume=function(e){i.volume=e.volume},this.setMicMuted=function(e){i.input.setMuted(e)},this.getInputByteFrequencyData=function(){return null!=i.inputFrequencyData||(i.inputFrequencyData=new Uint8Array(i.input.analyser.frequencyBinCount)),i.input.analyser.getByteFrequencyData(i.inputFrequencyData),i.inputFrequencyData},this.getOutputByteFrequencyData=function(){return null!=i.outputFrequencyData||(i.outputFrequencyData=new Uint8Array(i.output.analyser.frequencyBinCount)),i.output.analyser.getByteFrequencyData(i.outputFrequencyData),i.outputFrequencyData},this.getInputVolume=function(){return i.calculateVolume(i.getInputByteFrequencyData())},this.getOutputVolume=function(){return i.calculateVolume(i.getOutputByteFrequencyData())},this.sendFeedback=function(e){i.canSendFeedback?(i.connection.sendMessage({type:"feedback",score:e?"like":"dislike",event_id:i.currentEventId}),i.lastFeedbackEventId=i.currentEventId,i.updateCanSendFeedback()):console.warn(0===i.lastFeedbackEventId?"Cannot send feedback: the conversation has not started yet.":"Cannot send feedback: feedback has already been sent for the current response.")},this.sendContextualUpdate=function(e){i.connection.sendMessage({type:"contextual_update",text:e})},this.options=e,this.connection=n,this.input=t,this.output=o,this.wakeLock=r,this.options.onConnect({conversationId:n.conversationId}),this.connection.onDisconnect(this.endSessionWithDetails),this.connection.onMessage(this.onMessage),this.input.worklet.port.onmessage=this.onInputWorkletMessage,this.output.worklet.port.onmessage=this.onOutputWorkletMessage,this.updateStatus("connected")}return n.startSession=function(t){try{var a=function(){return l(function(){return Promise.resolve(navigator.mediaDevices.getUserMedia({audio:!0})).then(function(a){function l(){return Promise.resolve(u.create(t)).then(function(o){return p=o,Promise.resolve(Promise.all([r.create(e({},p.inputFormat,{preferHeadphonesForIosDevices:t.preferHeadphonesForIosDevices})),i.create(p.outputFormat)])).then(function(e){var t;return c=e[0],f=e[1],null==(t=m)||t.getTracks().forEach(function(e){return e.stop()}),m=null,new n(s,p,c,f,v)})})}m=a;var d,h,g,y=null!=(h=t.connectionDelay)?h:{default:0,android:3e3},_=y.default;/android/i.test(navigator.userAgent)?_=null!=(g=y.android)?g:_:o()&&(_=null!=(d=y.ios)?d:_);var b=function(){if(_>0)return Promise.resolve(new Promise(function(e){return setTimeout(e,_)})).then(function(){})}();return b&&b.then?b.then(l):l()})},function(e){var n,t,o;return s.onStatusChange({status:"disconnected"}),null==(n=m)||n.getTracks().forEach(function(e){return e.stop()}),null==(t=p)||t.close(),Promise.resolve(null==(o=c)?void 0:o.close()).then(function(){var n;return Promise.resolve(null==(n=f)?void 0:n.close()).then(function(){function n(){throw e}var t=l(function(){var e;return Promise.resolve(null==(e=v)?void 0:e.release()).then(function(){v=null})},function(){});return t&&t.then?t.then(n):n()})})})},s=e({},d,h,t);s.onStatusChange({status:"connecting"}),s.onCanSendFeedbackChange({canSendFeedback:!1});var c=null,p=null,f=null,m=null,v=null,g=function(e){if(null==(e=t.useWakeLock)||e){var n=l(function(){return Promise.resolve(navigator.wakeLock.request("screen")).then(function(e){v=e})},function(){});if(n&&n.then)return n.then(function(){})}}();return Promise.resolve(g&&g.then?g.then(a):a())}catch(e){return Promise.reject(e)}},n}();const f=document.getElementById("startBtn"),m=document.getElementById("stopBtn"),v=document.getElementById("status");let g=null;const y=new URLSearchParams(window.location.search),_=y.get("name"),b=y.get("id"),w=document.getElementById("name");console.log(b),_&&(w.textContent=_),b||(document.getElementById("startBtn").disabled=!0,document.getElementById("startBtn").innerText="Agente não encontrado!");const k=e=>{v.textContent="Status: "+e};async function S(){try{await navigator.mediaDevices.getUserMedia({audio:!0}),k("Microfone liberado"),g=await p.startSession({agentId:b,onConnect:()=>{console.log("Conectado ao agente!"),k("Conectado")},onDisconnect:()=>{console.log("Conexão encerrada."),k("Desconectado")},onMessage:e=>{console.log("Mensagem recebida:",e)},onError:e=>{console.error("Erro na sessão:",e),k("Erro")},onStatusChange:e=>{console.log("Status alterado:",e)},onModeChange:e=>{console.log("Modo alterado:",e)}}),f.classList.add("hidden"),m.classList.remove("hidden")}catch(e){console.error("Erro ao iniciar a conversa:",e),k("Erro ao iniciar")}}async function M(){g&&(await g.endSession(),g=null),k("Desconectado"),f.classList.remove("hidden"),m.classList.add("hidden")}f.addEventListener("click",S),m.addEventListener("click",M);
//# sourceMappingURL=arapy-11labs.5e877f12.js.map
