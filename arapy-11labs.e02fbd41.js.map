{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-b41747435a9ff262.js","index.js","node_modules/@11labs/client/dist/lib.module.js","node_modules/@11labs/client/src/utils/audio.ts","node_modules/@11labs/client/src/utils/rawAudioProcessor.ts","node_modules/@11labs/client/src/utils/compatibility.ts","node_modules/@11labs/client/src/utils/input.ts","node_modules/@11labs/client/src/utils/audioConcatProcessor.ts","node_modules/@11labs/client/src/utils/output.ts","node_modules/@11labs/client/src/utils/events.ts","node_modules/@11labs/client/src/utils/connection.ts","node_modules/@11labs/client/src/index.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","visualizer.js","visualizers/registry.js","visualizers/lineVisualizer.js","visualizers/imageVisualizer.js","subtitle.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"a726bb8fe02fbd41\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","// Importa o Conversation do pacote @11labs/client\n import { Conversation } from '@11labs/client';\n import { initFullVisualizer, observeMediaPlayback, hookConversationAudio, connectMediaEl, setActiveConversation, updateVisualizerMode, configureVisualizer} from './visualizer.js';\n import { initSubtitles, handleConversationMessage, configureSubtitles, clearSubtitles, setSubtitlesEnabled } from './subtitle.js';\n\n const startBtn = document.getElementById('startBtn');\n const stopBtn = document.getElementById('stopBtn');\n const statusEl = document.getElementById('status');\n let conversationInstance = null;\n let audio = null;\n// Visualizer state is managed in visualizer.js\n\n// on page load: check for name and id parameters in url, then set the <span id=name> object\n\n\nconst urlParams = new URLSearchParams(window.location.search);\nlet config = {\n    name: urlParams.get('name'),\n    agentId: urlParams.get('id'),\n    mode: urlParams.get('mode') || 'card', // 'card', 'fullscreen', or 'painel'\n    visualizationMode: urlParams.get('visualization') || null,\n    subtitlesEnabled: urlParams.get('subtitles') !== null ? (urlParams.get('subtitles') === 'true' || urlParams.get('subtitles') === '1') : null,\n}\n\nconsole.log('Initial config from URL params:', config);\n\n//try to load  a {name}.json from the server and merge with URL params\nconst loadConfig = async () => {\n  // Store URL parameters before loading JSON\n  const urlMode = urlParams.get('mode') || 'card';\n  const urlVisualization = urlParams.get('visualization');\n  const urlSubtitles = config.subtitlesEnabled;\n  \n  if (!config.agentId) {\n      try {\n          const response = await fetch(`./agents/${config.name}.json`);\n          if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n          }\n          const data = await response.json();\n          \n          // Merge JSON data with URL parameters (URL params have priority)\n          config = {\n            ...data,\n            mode: urlMode,\n            visualizationMode: urlVisualization || data.defaultVisualization\n          };\n          \n          // Override subtitles.enabled if URL parameter is provided\n          if (urlSubtitles !== null && config.subtitles) {\n            config.subtitles.enabled = urlSubtitles;\n          }\n          \n          console.log('Config loaded and merged:', config);\n\n      } catch (error) {\n          console.error('Error loading config:', error);\n      }\n  }\n\n  document.getElementById('name').textContent = config.name;\n\n  if (!config.agentId) {\n      const startBtn = document.getElementById('startBtn');\n      startBtn.disabled = true;\n      startBtn.innerText = \"Agente não encontrado!\";\n  }\n  \n  // Validate visualization configuration if provided\n  if (config.mode === 'fullscreen' || config.mode === 'painel') {\n    const vizError = validateVisualizationConfig();\n    if (vizError) {\n      showError(vizError);\n      return;\n    }\n  }\n  \n  // Initialize display mode after config is loaded\n  if (config.mode === 'painel') {\n    initializePainelMode();\n  } else if (config.mode === 'fullscreen') {\n    initializeFullscreenMode();\n  }\n};\n\n// Function to validate visualization configuration\nconst validateVisualizationConfig = () => {\n  // Check if visualizations object exists\n  if (!config.visualizations || typeof config.visualizations !== 'object') {\n    return 'Erro: Configuração de visualizações não encontrada no JSON do agente.';\n  }\n  \n  // Get the visualization mode from URL or default\n  const vizMode = config.visualizationMode || config.defaultVisualization;\n  \n  if (!vizMode) {\n    return 'Erro: Nenhum modo de visualização especificado. Use o parâmetro ?visualization=<modo> na URL.';\n  }\n  \n  // Check if the requested visualization exists\n  if (!config.visualizations[vizMode]) {\n    const availableModes = Object.keys(config.visualizations).join(', ');\n    return `Erro: Visualização \"${vizMode}\" não encontrada. Modos disponíveis: ${availableModes}`;\n  }\n  \n  const vizConfig = config.visualizations[vizMode];\n  \n  // Validate required parameters based on mode\n  if (!vizConfig.mode) {\n    return `Erro: Parâmetro \"mode\" ausente na configuração da visualização \"${vizMode}\".`;\n  }\n  \n  // Mode-specific validation\n  if (vizConfig.mode === 'image') {\n    if (!vizConfig.talk_images || !Array.isArray(vizConfig.talk_images) || vizConfig.talk_images.length === 0) {\n      return `Erro: Parâmetro \"talk_images\" ausente ou inválido na visualização \"${vizMode}\".`;\n    }\n    if (!vizConfig.idle_images || !Array.isArray(vizConfig.idle_images) || vizConfig.idle_images.length === 0) {\n      return `Erro: Parâmetro \"idle_images\" ausente ou inválido na visualização \"${vizMode}\".`;\n    }\n  }\n  \n  return null; // No errors\n};\n\n// Function to show error on screen\nconst showError = (errorMessage) => {\n  const cardEl = document.getElementById('card');\n  const fullModeEl = document.getElementById('fullMode');\n  \n  // Hide both card and fullscreen mode\n  if (cardEl) cardEl.classList.add('hidden');\n  if (fullModeEl) fullModeEl.classList.add('hidden');\n  \n  // Create error overlay\n  const errorDiv = document.createElement('div');\n  errorDiv.className = 'fixed inset-0 bg-red-900 flex items-center justify-center p-8';\n  errorDiv.innerHTML = `\n    <div class=\"bg-white rounded-lg shadow-2xl p-8 max-w-2xl\">\n      <h1 class=\"text-3xl font-bold text-red-600 mb-4\">⚠️ Erro de Configuração</h1>\n      <p class=\"text-gray-800 text-lg mb-6\">${errorMessage}</p>\n      <div class=\"text-sm text-gray-600\">\n        <p class=\"mb-2\"><strong>Dicas:</strong></p>\n        <ul class=\"list-disc list-inside space-y-1\">\n          <li>Verifique se o JSON do agente possui o objeto \"visualizations\"</li>\n          <li>Use ?visualization=<modo> na URL para especificar o modo</li>\n          <li>Certifique-se de que todos os parâmetros necessários estão configurados</li>\n        </ul>\n      </div>\n    </div>\n  `;\n  document.body.appendChild(errorDiv);\n};\n\n// Função para inicializar modo fullscreen\nconst initializeFullscreenMode = () => {\n  const cardEl = document.getElementById('card');\n  const fullModeEl = document.getElementById('fullMode');\n  \n  if (config.mode === 'fullscreen') {\n    console.log('[fullscreen] Initializing fullscreen mode');\n    // Hide card, show overlay\n    if (cardEl) cardEl.classList.add('hidden');\n    if (fullModeEl) fullModeEl.classList.remove('hidden');\n    \n    // Get visualization mode from URL or default\n    const vizMode = config.visualizationMode || config.defaultVisualization;\n    \n    // Get the specific visualization config\n    const vizConfig = config.visualizations[vizMode];\n    console.log('[fullscreen] Using visualization mode:', vizMode);\n    console.log('[fullscreen] Visualizer config:', vizConfig);\n    \n    // Add backgroundImage to visualizer config if mode is 'line' and backgroundImage exists\n    if (vizConfig.mode === 'line' && config.backgroundImage) {\n      vizConfig.backgroundImage = config.backgroundImage;\n    }\n    \n    initFullVisualizer('vizCanvas', vizConfig, fullModeEl);\n    observeMediaPlayback();\n    \n    // Initialize subtitles (uses defaults if no config provided)\n    const subtitlesConfig = config.subtitles || {};\n    // Check if enabled (default is true, can be overridden by JSON or URL)\n    const subtitlesEnabled = subtitlesConfig.enabled !== false;\n    \n    if (subtitlesEnabled) {\n      initSubtitles(fullModeEl, subtitlesConfig);\n      console.log('[fullscreen] Subtitles initialized');\n    } else {\n      console.log('[fullscreen] Subtitles disabled');\n    }\n    \n    // Click anywhere to start/stop\n    fullModeEl.addEventListener('click', async () => {\n      if (!conversationInstance) {\n        await startConversation();\n      } else {\n        await endConversation();\n      }\n    });\n    \n    // Idle by default\n    updateVisualizerMode('idle');\n  }\n};\n\n// Função para inicializar modo painel (384x768 LED panel)\nconst initializePainelMode = () => {\n  const cardEl = document.getElementById('card');\n  const painelModeEl = document.getElementById('painelMode');\n  \n  if (config.mode === 'painel') {\n    console.log('[painel] Initializing painel mode (384x768)');\n    // Hide card, show painel\n    if (cardEl) cardEl.classList.add('hidden');\n    if (painelModeEl) painelModeEl.classList.remove('hidden');\n    \n    // Get visualization mode from URL or default\n    const vizMode = config.visualizationMode || config.defaultVisualization;\n    \n    // Get the specific visualization config\n    const vizConfig = config.visualizations[vizMode];\n    console.log('[painel] Using visualization mode:', vizMode);\n    console.log('[painel] Visualizer config:', vizConfig);\n    \n    // Add backgroundImage to visualizer config if mode is 'line' and backgroundImage exists\n    if (vizConfig.mode === 'line' && config.backgroundImage) {\n      vizConfig.backgroundImage = config.backgroundImage;\n    }\n    \n    initFullVisualizer('painelCanvas', vizConfig, painelModeEl);\n    observeMediaPlayback();\n    \n    // Initialize subtitles (uses defaults if no config provided)\n    const subtitlesConfig = config.subtitles || {};\n    // Check if enabled (default is true, can be overridden by JSON or URL)\n    const subtitlesEnabled = subtitlesConfig.enabled !== false;\n    \n    if (subtitlesEnabled) {\n      initSubtitles(painelModeEl, subtitlesConfig);\n      console.log('[painel] Subtitles initialized');\n    } else {\n      console.log('[painel] Subtitles disabled');\n    }\n    \n    // Click anywhere to start/stop\n    painelModeEl.addEventListener('click', async () => {\n      if (!conversationInstance) {\n        await startConversation();\n      } else {\n        await endConversation();\n      }\n    });\n    \n    // Idle by default\n    updateVisualizerMode('idle');\n  }\n};\n\nloadConfig();\n\n // Função para atualizar o status na interface\n const updateStatus = (status) => {\n   statusEl.textContent = \"Status: \" + status;\n };\n\n // Função para iniciar a conversa\n async function startConversation() {\n   try {\n     // Primeiro, solicite acesso ao microfone e explique o porquê ao usuário\n     await navigator.mediaDevices.getUserMedia({ audio: true });\n     updateStatus('Microfone liberado');\n\n    //Play an mp3 file and wait for it to finish\n      if (config.startAudio) {\n\n       startBtn.classList.add('hidden');\n       stopBtn.classList.remove('hidden');\n\n       audio = new Audio(config.startAudio);\n       try { audio.crossOrigin = 'anonymous'; } catch {}\n       if (config.mode === 'fullscreen' || config.mode === 'painel') {\n         await connectMediaEl(audio);\n         updateVisualizerMode('active');\n       }\n        audio.play();\n        updateStatus('Reproduzindo áudio de boas-vindas');\n        await new Promise((resolve) => {\n          audio.onended = () => {\n            if (config.mode === 'fullscreen' || config.mode === 'painel') updateVisualizerMode('idle');\n            resolve();\n          };\n        });  \n      }\n      \n     // Inicia a sessão de conversa com o agente\n     //Parse o ID do agente a partir da URL, parametro id\n     conversationInstance = await Conversation.startSession({\n       agentId: config.agentId,\n       // Callbacks opcionais:\n       onConnect: () => {\n         console.log('Conectado ao agente!');\n         updateStatus('Conectado');\n       },\n       onDisconnect: () => {\n         console.log('Conexão encerrada.');\n         updateStatus('Desconectado');\n       },\n       onMessage: (message) => {\n         console.log('Mensagem recebida:', message);\n         \n         // Handle subtitles if enabled (check if not explicitly disabled)\n         const subtitlesEnabled = config.subtitles ? config.subtitles.enabled !== false : true;\n         if (subtitlesEnabled) {\n           handleConversationMessage(message);\n         }\n       },\n       onError: (error) => {\n         console.error('Erro na sessão:', error);\n         updateStatus('Erro');\n       },\n       onStatusChange: (status) => {\n         console.log('Status alterado:', status);\n       },\n       onModeChange: (mode) => {\n          console.log('Modo alterado:', mode);\n          // Control visualization directly based on SDK mode\n          try {\n            if (config.mode === 'fullscreen' || config.mode === 'painel') {\n              if (mode.mode == 'speaking') {\n                updateVisualizerMode('active');\n                console.log('[viz] speaking!!!');\n              } else {\n                // Any other mode (listening, idle, etc.) goes to idle\n                updateVisualizerMode('idle');\n                console.log('[viz] idle!');\n              }\n            }\n          } catch {}\n       },\n     });\n\n      // Try to hook SDK audio for visualization\n      if (config.mode === 'fullscreen' || config.mode === 'painel') {\n        await hookConversationAudio(conversationInstance);\n        setActiveConversation(conversationInstance);\n      }\n\n   } catch (error) {\n     console.error('Erro ao iniciar a conversa:', error);\n     updateStatus('Erro ao iniciar');\n   }\n }\n\n // Função para encerrar a conversa\n async function endConversation() {\n   if (audio) {\n      audio.pause();\n      audio = null;\n   }\n   // Clear subtitles\n   clearSubtitles();\n   \n   // Return to idle\n   updateVisualizerMode('idle');\n   if (conversationInstance) {\n     await conversationInstance.endSession();\n     conversationInstance = null;\n   }\n   updateStatus('Desconectado');\n   startBtn.classList.remove('hidden');\n   stopBtn.classList.add('hidden');\n }\n\n // Eventos dos botões\n startBtn.addEventListener('click', startConversation);\n stopBtn.addEventListener('click', endConversation);\n",null,"export function arrayBufferToBase64(b: ArrayBufferLike) {\n  const buffer = new Uint8Array(b);\n  // @ts-ignore\n  const base64Data = window.btoa(String.fromCharCode(...buffer));\n  return base64Data;\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n","/*\n * ulaw encoding logic taken from the wavefile library\n * https://github.com/rochars/wavefile/blob/master/lib/codecs/mulaw.js\n */\n\nconst blob = new Blob(\n  [\n    // language=JavaScript\n    `\n      const BIAS = 0x84;\n      const CLIP = 32635;\n      const encodeTable = [\n        0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,\n        4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n        5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n        5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,\n        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7\n      ];\n      \n      function encodeSample(sample) {\n        let sign;\n        let exponent;\n        let mantissa;\n        let muLawSample;\n        sign = (sample >> 8) & 0x80;\n        if (sign !== 0) sample = -sample;\n        sample = sample + BIAS;\n        if (sample > CLIP) sample = CLIP;\n        exponent = encodeTable[(sample>>7) & 0xFF];\n        mantissa = (sample >> (exponent+3)) & 0x0F;\n        muLawSample = ~(sign | (exponent << 4) | mantissa);\n        \n        return muLawSample;\n      }\n    \n      class RawAudioProcessor extends AudioWorkletProcessor {\n        constructor() {\n          super();\n                    \n          this.port.onmessage = ({ data }) => {\n            switch (data.type) {\n              case \"setFormat\":\n                this.isMuted = false;\n                this.buffer = []; // Initialize an empty buffer\n                this.bufferSize = data.sampleRate / 4;\n                this.format = data.format;\n\n                if (globalThis.LibSampleRate && sampleRate !== data.sampleRate) {\n                  globalThis.LibSampleRate.create(1, sampleRate, data.sampleRate).then(resampler => {\n                    this.resampler = resampler;\n                  });\n                }\n                break;\n              case \"setMuted\":\n                this.isMuted = data.isMuted;\n                break;\n            }\n          };\n        }\n        process(inputs) {\n          if (!this.buffer) {\n            return true;\n          }\n          \n          const input = inputs[0]; // Get the first input node\n          if (input.length > 0) {\n            let channelData = input[0]; // Get the first channel's data\n\n            // Resample the audio if necessary\n            if (this.resampler) {\n              channelData = this.resampler.full(channelData);\n            }\n\n            // Add channel data to the buffer\n            this.buffer.push(...channelData);\n            // Get max volume \n            let sum = 0.0;\n            for (let i = 0; i < channelData.length; i++) {\n              sum += channelData[i] * channelData[i];\n            }\n            const maxVolume = Math.sqrt(sum / channelData.length);\n            // Check if buffer size has reached or exceeded the threshold\n            if (this.buffer.length >= this.bufferSize) {\n              const float32Array = this.isMuted \n                ? new Float32Array(this.buffer.length)\n                : new Float32Array(this.buffer);\n\n              let encodedArray = this.format === \"ulaw\"\n                ? new Uint8Array(float32Array.length)\n                : new Int16Array(float32Array.length);\n\n              // Iterate through the Float32Array and convert each sample to PCM16\n              for (let i = 0; i < float32Array.length; i++) {\n                // Clamp the value to the range [-1, 1]\n                let sample = Math.max(-1, Math.min(1, float32Array[i]));\n\n                // Scale the sample to the range [-32768, 32767]\n                let value = sample < 0 ? sample * 32768 : sample * 32767;\n                if (this.format === \"ulaw\") {\n                  value = encodeSample(Math.round(value));\n                }\n\n                encodedArray[i] = value;\n              }\n\n              // Send the buffered data to the main script\n              this.port.postMessage([encodedArray, maxVolume]);\n\n              // Clear the buffer after sending\n              this.buffer = [];\n            }\n          }\n          return true; // Continue processing\n        }\n      }\n      registerProcessor(\"raw-audio-processor\", RawAudioProcessor);\n  `,\n  ],\n  { type: \"application/javascript\" }\n);\n\nexport const rawAudioProcessor = URL.createObjectURL(blob);\n","export function isIosDevice() {\n  return (\n    [\n      \"iPad Simulator\",\n      \"iPhone Simulator\",\n      \"iPod Simulator\",\n      \"iPad\",\n      \"iPhone\",\n      \"iPod\",\n    ].includes(navigator.platform) ||\n    // iPad on iOS 13 detection\n    (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n  );\n}\n\nexport function isAndroidDevice() {\n  return /android/i.test(navigator.userAgent);\n}\n","import { rawAudioProcessor } from \"./rawAudioProcessor\";\nimport { FormatConfig } from \"./connection\";\nimport { isIosDevice } from \"./compatibility\";\n\nexport type InputConfig = {\n  preferHeadphonesForIosDevices?: boolean;\n};\n\nconst LIBSAMPLERATE_JS =\n  \"https://cdn.jsdelivr.net/npm/@alexanderolsen/libsamplerate-js@2.1.2/dist/libsamplerate.worklet.js\";\n\nexport class Input {\n  public static async create({\n    sampleRate,\n    format,\n    preferHeadphonesForIosDevices,\n  }: FormatConfig & InputConfig): Promise<Input> {\n    let context: AudioContext | null = null;\n    let inputStream: MediaStream | null = null;\n\n    try {\n      const options: MediaTrackConstraints = {\n        sampleRate: { ideal: sampleRate },\n        echoCancellation: { ideal: true },\n        noiseSuppression: { ideal: true },\n      };\n\n      if (isIosDevice() && preferHeadphonesForIosDevices) {\n        const availableDevices =\n          await window.navigator.mediaDevices.enumerateDevices();\n        const idealDevice = availableDevices.find(\n          d =>\n            // cautious to include \"bluetooth\" in the search\n            // as might trigger bluetooth speakers\n            d.kind === \"audioinput\" &&\n            [\"airpod\", \"headphone\", \"earphone\"].find(keyword =>\n              d.label.toLowerCase().includes(keyword)\n            )\n        );\n        if (idealDevice) {\n          options.deviceId = { ideal: idealDevice.deviceId };\n        }\n      }\n\n      const supportsSampleRateConstraint =\n        navigator.mediaDevices.getSupportedConstraints().sampleRate;\n\n      context = new window.AudioContext(\n        supportsSampleRateConstraint ? { sampleRate } : {}\n      );\n      const analyser = context.createAnalyser();\n      if (!supportsSampleRateConstraint) {\n        await context.audioWorklet.addModule(LIBSAMPLERATE_JS);\n      }\n      await context.audioWorklet.addModule(rawAudioProcessor);\n\n      inputStream = await navigator.mediaDevices.getUserMedia({\n        audio: options,\n      });\n\n      const source = context.createMediaStreamSource(inputStream);\n      const worklet = new AudioWorkletNode(context, \"raw-audio-processor\");\n      worklet.port.postMessage({ type: \"setFormat\", format, sampleRate });\n\n      source.connect(analyser);\n      analyser.connect(worklet);\n\n      await context.resume();\n\n      return new Input(context, analyser, worklet, inputStream);\n    } catch (error) {\n      inputStream?.getTracks().forEach(track => track.stop());\n      context?.close();\n      throw error;\n    }\n  }\n\n  private constructor(\n    public readonly context: AudioContext,\n    public readonly analyser: AnalyserNode,\n    public readonly worklet: AudioWorkletNode,\n    public readonly inputStream: MediaStream\n  ) {}\n\n  public async close() {\n    this.inputStream.getTracks().forEach(track => track.stop());\n    await this.context.close();\n  }\n\n  public setMuted(isMuted: boolean) {\n    this.worklet.port.postMessage({ type: \"setMuted\", isMuted });\n  }\n}\n","/*\n * ulaw decoding logic taken from the wavefile library\n * https://github.com/rochars/wavefile/blob/master/lib/codecs/mulaw.js\n */\n\nconst blob = new Blob(\n  [\n    // language=JavaScript\n    `\n      const decodeTable = [0,132,396,924,1980,4092,8316,16764];\n      \n      export function decodeSample(muLawSample) {\n        let sign;\n        let exponent;\n        let mantissa;\n        let sample;\n        muLawSample = ~muLawSample;\n        sign = (muLawSample & 0x80);\n        exponent = (muLawSample >> 4) & 0x07;\n        mantissa = muLawSample & 0x0F;\n        sample = decodeTable[exponent] + (mantissa << (exponent+3));\n        if (sign !== 0) sample = -sample;\n\n        return sample;\n      }\n      \n      class AudioConcatProcessor extends AudioWorkletProcessor {\n        constructor() {\n          super();\n          this.buffers = []; // Initialize an empty buffer\n          this.cursor = 0;\n          this.currentBuffer = null;\n          this.wasInterrupted = false;\n          this.finished = false;\n          \n          this.port.onmessage = ({ data }) => {\n            switch (data.type) {\n              case \"setFormat\":\n                this.format = data.format;\n                break;\n              case \"buffer\":\n                this.wasInterrupted = false;\n                this.buffers.push(\n                  this.format === \"ulaw\"\n                    ? new Uint8Array(data.buffer)\n                    : new Int16Array(data.buffer)\n                );\n                break;\n              case \"interrupt\":\n                this.wasInterrupted = true;\n                break;\n              case \"clearInterrupted\":\n                if (this.wasInterrupted) {\n                  this.wasInterrupted = false;\n                  this.buffers = [];\n                  this.currentBuffer = null;\n                }\n            }\n          };\n        }\n        process(_, outputs) {\n          let finished = false;\n          const output = outputs[0][0];\n          for (let i = 0; i < output.length; i++) {\n            if (!this.currentBuffer) {\n              if (this.buffers.length === 0) {\n                finished = true;\n                break;\n              }\n              this.currentBuffer = this.buffers.shift();\n              this.cursor = 0;\n            }\n\n            let value = this.currentBuffer[this.cursor];\n            if (this.format === \"ulaw\") {\n              value = decodeSample(value);\n            }\n            output[i] = value / 32768;\n            this.cursor++;\n\n            if (this.cursor >= this.currentBuffer.length) {\n              this.currentBuffer = null;\n            }\n          }\n\n          if (this.finished !== finished) {\n            this.finished = finished;\n            this.port.postMessage({ type: \"process\", finished });\n          }\n\n          return true; // Continue processing\n        }\n      }\n\n      registerProcessor(\"audio-concat-processor\", AudioConcatProcessor);\n    `,\n  ],\n  { type: \"application/javascript\" }\n);\n\nexport const audioConcatProcessor = URL.createObjectURL(blob);\n","import { audioConcatProcessor } from \"./audioConcatProcessor\";\nimport { FormatConfig } from \"./connection\";\n\nexport class Output {\n  public static async create({\n    sampleRate,\n    format,\n  }: FormatConfig): Promise<Output> {\n    let context: AudioContext | null = null;\n    try {\n      context = new AudioContext({ sampleRate });\n      const analyser = context.createAnalyser();\n      const gain = context.createGain();\n      gain.connect(analyser);\n      analyser.connect(context.destination);\n      await context.audioWorklet.addModule(audioConcatProcessor);\n      const worklet = new AudioWorkletNode(context, \"audio-concat-processor\");\n      worklet.port.postMessage({ type: \"setFormat\", format });\n      worklet.connect(gain);\n\n      await context.resume();\n\n      return new Output(context, analyser, gain, worklet);\n    } catch (error) {\n      context?.close();\n      throw error;\n    }\n  }\n\n  private constructor(\n    public readonly context: AudioContext,\n    public readonly analyser: AnalyserNode,\n    public readonly gain: GainNode,\n    public readonly worklet: AudioWorkletNode\n  ) {}\n\n  public async close() {\n    await this.context.close();\n  }\n}\n","import { Language } from \"./connection\";\n\nexport type UserTranscriptionEvent = {\n  type: \"user_transcript\";\n  user_transcription_event: { user_transcript: string };\n};\nexport type AgentResponseEvent = {\n  type: \"agent_response\";\n  agent_response_event: { agent_response: string };\n};\nexport type AgentAudioEvent = {\n  type: \"audio\";\n  audio_event: {\n    audio_base_64: string;\n    event_id: number;\n  };\n};\nexport type InterruptionEvent = {\n  type: \"interruption\";\n  interruption_event: {\n    event_id: number;\n  };\n};\nexport type InternalTentativeAgentResponseEvent = {\n  type: \"internal_tentative_agent_response\";\n  tentative_agent_response_internal_event: {\n    tentative_agent_response: string;\n  };\n};\nexport type ConfigEvent = {\n  type: \"conversation_initiation_metadata\";\n  conversation_initiation_metadata_event: {\n    conversation_id: string;\n    agent_output_audio_format: string;\n    user_input_audio_format?: string;\n  };\n};\nexport type PingEvent = {\n  type: \"ping\";\n  ping_event: {\n    event_id: number;\n    ping_ms?: number;\n  };\n};\nexport type ClientToolCallEvent = {\n  type: \"client_tool_call\";\n  client_tool_call: {\n    tool_name: string;\n    tool_call_id: string;\n    parameters: any;\n    expects_response: boolean;\n  };\n};\n\n// TODO correction missing\nexport type IncomingSocketEvent =\n  | UserTranscriptionEvent\n  | AgentResponseEvent\n  | AgentAudioEvent\n  | InterruptionEvent\n  | InternalTentativeAgentResponseEvent\n  | ConfigEvent\n  | PingEvent\n  | ClientToolCallEvent;\n\nexport type PongEvent = {\n  type: \"pong\";\n  event_id: number;\n};\nexport type UserAudioEvent = {\n  user_audio_chunk: string;\n};\nexport type UserFeedbackEvent = {\n  type: \"feedback\";\n  score: \"like\" | \"dislike\";\n  event_id: number;\n};\nexport type ClientToolResultEvent = {\n  type: \"client_tool_result\";\n  tool_call_id: string;\n  result: any;\n  is_error: boolean;\n};\nexport type InitiationClientDataEvent = {\n  type: \"conversation_initiation_client_data\";\n  conversation_config_override?: {\n    agent?: {\n      prompt?: {\n        prompt?: string;\n      };\n      first_message?: string;\n      language?: Language;\n    };\n    tts?: {\n      voice_id?: string;\n    };\n  };\n  custom_llm_extra_body?: any;\n  dynamic_variables?: Record<string, string | number | boolean>;\n};\nexport type ContextualUpdateEvent = {\n  type: \"contextual_update\";\n  text: string;\n};\nexport type OutgoingSocketEvent =\n  | PongEvent\n  | UserAudioEvent\n  | InitiationClientDataEvent\n  | UserFeedbackEvent\n  | ClientToolResultEvent\n  | ContextualUpdateEvent;\n\nexport function isValidSocketEvent(event: any): event is IncomingSocketEvent {\n  return !!event.type;\n}\n","import {\n  InitiationClientDataEvent,\n  ConfigEvent,\n  isValidSocketEvent,\n  OutgoingSocketEvent,\n  IncomingSocketEvent,\n} from \"./events\";\n\nconst MAIN_PROTOCOL = \"convai\";\n\nexport type Language =\n  | \"en\"\n  | \"ja\"\n  | \"zh\"\n  | \"de\"\n  | \"hi\"\n  | \"fr\"\n  | \"ko\"\n  | \"pt\"\n  | \"pt-br\"\n  | \"it\"\n  | \"es\"\n  | \"id\"\n  | \"nl\"\n  | \"tr\"\n  | \"pl\"\n  | \"sv\"\n  | \"bg\"\n  | \"ro\"\n  | \"ar\"\n  | \"cs\"\n  | \"el\"\n  | \"fi\"\n  | \"ms\"\n  | \"da\"\n  | \"ta\"\n  | \"uk\"\n  | \"ru\"\n  | \"hu\"\n  | \"no\"\n  | \"vi\";\nexport type SessionConfig = {\n  origin?: string;\n  authorization?: string;\n  overrides?: {\n    agent?: {\n      prompt?: {\n        prompt?: string;\n      };\n      firstMessage?: string;\n      language?: Language;\n    };\n    tts?: {\n      voiceId?: string;\n    };\n  };\n  customLlmExtraBody?: any;\n  dynamicVariables?: Record<string, string | number | boolean>;\n  useWakeLock?: boolean;\n  connectionDelay?: {\n    default: number;\n    android?: number;\n    ios?: number;\n  };\n} & (\n  | { signedUrl: string; agentId?: undefined }\n  | { agentId: string; signedUrl?: undefined }\n);\nexport type FormatConfig = {\n  format: \"pcm\" | \"ulaw\";\n  sampleRate: number;\n};\nexport type DisconnectionDetails =\n  | {\n      reason: \"error\";\n      message: string;\n      context: Event;\n    }\n  | {\n      reason: \"agent\";\n      context: CloseEvent;\n    }\n  | {\n      reason: \"user\";\n    };\nexport type OnDisconnectCallback = (details: DisconnectionDetails) => void;\nexport type OnMessageCallback = (event: IncomingSocketEvent) => void;\n\nconst WSS_API_ORIGIN = \"wss://api.elevenlabs.io\";\nconst WSS_API_PATHNAME = \"/v1/convai/conversation?agent_id=\";\n\nexport class Connection {\n  public static async create(config: SessionConfig): Promise<Connection> {\n    let socket: WebSocket | null = null;\n\n    try {\n      const origin = config.origin ?? WSS_API_ORIGIN;\n      const url = config.signedUrl\n        ? config.signedUrl\n        : origin + WSS_API_PATHNAME + config.agentId;\n\n      const protocols = [MAIN_PROTOCOL];\n      if (config.authorization) {\n        protocols.push(`bearer.${config.authorization}`);\n      }\n      socket = new WebSocket(url, protocols);\n      const conversationConfig = await new Promise<\n        ConfigEvent[\"conversation_initiation_metadata_event\"]\n      >((resolve, reject) => {\n        socket!.addEventListener(\n          \"open\",\n          () => {\n            const overridesEvent: InitiationClientDataEvent = {\n              type: \"conversation_initiation_client_data\",\n            };\n\n            if (config.overrides) {\n              overridesEvent.conversation_config_override = {\n                agent: {\n                  prompt: config.overrides.agent?.prompt,\n                  first_message: config.overrides.agent?.firstMessage,\n                  language: config.overrides.agent?.language,\n                },\n                tts: {\n                  voice_id: config.overrides.tts?.voiceId,\n                },\n              };\n            }\n\n            if (config.customLlmExtraBody) {\n              overridesEvent.custom_llm_extra_body = config.customLlmExtraBody;\n            }\n\n            if (config.dynamicVariables) {\n              overridesEvent.dynamic_variables = config.dynamicVariables;\n            }\n\n            socket?.send(JSON.stringify(overridesEvent));\n          },\n          { once: true }\n        );\n        socket!.addEventListener(\"error\", event => {\n          // In case the error event is followed by a close event, we want the\n          // latter to be the one that rejects the promise as it contains more\n          // useful information.\n          setTimeout(() => reject(event), 0);\n        });\n        socket!.addEventListener(\"close\", reject);\n        socket!.addEventListener(\n          \"message\",\n          (event: MessageEvent) => {\n            const message = JSON.parse(event.data);\n\n            if (!isValidSocketEvent(message)) {\n              return;\n            }\n\n            if (message.type === \"conversation_initiation_metadata\") {\n              resolve(message.conversation_initiation_metadata_event);\n            } else {\n              console.warn(\n                \"First received message is not conversation metadata.\"\n              );\n            }\n          },\n          { once: true }\n        );\n      });\n\n      const {\n        conversation_id,\n        agent_output_audio_format,\n        user_input_audio_format,\n      } = conversationConfig;\n\n      const inputFormat = parseFormat(user_input_audio_format ?? \"pcm_16000\");\n      const outputFormat = parseFormat(agent_output_audio_format);\n\n      return new Connection(socket, conversation_id, inputFormat, outputFormat);\n    } catch (error) {\n      socket?.close();\n      throw error;\n    }\n  }\n\n  private queue: IncomingSocketEvent[] = [];\n  private disconnectionDetails: DisconnectionDetails | null = null;\n  private onDisconnectCallback: OnDisconnectCallback | null = null;\n  private onMessageCallback: OnMessageCallback | null = null;\n\n  private constructor(\n    public readonly socket: WebSocket,\n    public readonly conversationId: string,\n    public readonly inputFormat: FormatConfig,\n    public readonly outputFormat: FormatConfig\n  ) {\n    this.socket.addEventListener(\"error\", event => {\n      // In case the error event is followed by a close event, we want the\n      // latter to be the one that disconnects the session as it contains more\n      // useful information.\n      setTimeout(\n        () =>\n          this.disconnect({\n            reason: \"error\",\n            message: \"The connection was closed due to a socket error.\",\n            context: event,\n          }),\n        0\n      );\n    });\n    this.socket.addEventListener(\"close\", event => {\n      this.disconnect(\n        event.code === 1000\n          ? {\n              reason: \"agent\",\n              context: event,\n            }\n          : {\n              reason: \"error\",\n              message:\n                event.reason || \"The connection was closed by the server.\",\n              context: event,\n            }\n      );\n    });\n    this.socket.addEventListener(\"message\", event => {\n      try {\n        const parsedEvent = JSON.parse(event.data);\n        if (!isValidSocketEvent(parsedEvent)) {\n          return;\n        }\n\n        if (this.onMessageCallback) {\n          this.onMessageCallback(parsedEvent);\n        } else {\n          this.queue.push(parsedEvent);\n        }\n      } catch (_) {}\n    });\n  }\n\n  public close() {\n    this.socket.close();\n  }\n\n  public sendMessage(message: OutgoingSocketEvent) {\n    this.socket.send(JSON.stringify(message));\n  }\n\n  public onMessage(callback: OnMessageCallback) {\n    this.onMessageCallback = callback;\n    this.queue.forEach(callback);\n    this.queue = [];\n  }\n\n  public onDisconnect(callback: OnDisconnectCallback) {\n    this.onDisconnectCallback = callback;\n    if (this.disconnectionDetails) {\n      callback(this.disconnectionDetails);\n    }\n  }\n\n  private disconnect(details: DisconnectionDetails) {\n    if (!this.disconnectionDetails) {\n      this.disconnectionDetails = details;\n      this.onDisconnectCallback?.(details);\n    }\n  }\n}\n\nfunction parseFormat(format: string): FormatConfig {\n  const [formatPart, sampleRatePart] = format.split(\"_\");\n  if (![\"pcm\", \"ulaw\"].includes(formatPart)) {\n    throw new Error(`Invalid format: ${format}`);\n  }\n\n  const sampleRate = parseInt(sampleRatePart);\n  if (isNaN(sampleRate)) {\n    throw new Error(`Invalid sample rate: ${sampleRatePart}`);\n  }\n\n  return {\n    format: formatPart as FormatConfig[\"format\"],\n    sampleRate,\n  };\n}\n","import { arrayBufferToBase64, base64ToArrayBuffer } from \"./utils/audio\";\nimport { Input, InputConfig } from \"./utils/input\";\nimport { Output } from \"./utils/output\";\nimport {\n  Connection,\n  DisconnectionDetails,\n  OnDisconnectCallback,\n  SessionConfig,\n} from \"./utils/connection\";\nimport { ClientToolCallEvent, IncomingSocketEvent } from \"./utils/events\";\nimport { isAndroidDevice, isIosDevice } from \"./utils/compatibility\";\n\nexport type { InputConfig } from \"./utils/input\";\nexport type { IncomingSocketEvent } from \"./utils/events\";\nexport type {\n  SessionConfig,\n  DisconnectionDetails,\n  Language,\n} from \"./utils/connection\";\nexport type Role = \"user\" | \"ai\";\nexport type Mode = \"speaking\" | \"listening\";\nexport type Status =\n  | \"connecting\"\n  | \"connected\"\n  | \"disconnecting\"\n  | \"disconnected\";\nexport type Options = SessionConfig &\n  Callbacks &\n  ClientToolsConfig &\n  InputConfig;\nexport type ClientToolsConfig = {\n  clientTools: Record<\n    string,\n    (\n      parameters: any\n    ) => Promise<string | number | void> | string | number | void\n  >;\n};\nexport type Callbacks = {\n  onConnect: (props: { conversationId: string }) => void;\n  // internal debug events, not to be used\n  onDebug: (props: any) => void;\n  onDisconnect: OnDisconnectCallback;\n  onError: (message: string, context?: any) => void;\n  onMessage: (props: { message: string; source: Role }) => void;\n  onAudio: (base64Audio: string) => void;\n  onModeChange: (prop: { mode: Mode }) => void;\n  onStatusChange: (prop: { status: Status }) => void;\n  onCanSendFeedbackChange: (prop: { canSendFeedback: boolean }) => void;\n  onUnhandledClientToolCall?: (\n    params: ClientToolCallEvent[\"client_tool_call\"]\n  ) => void;\n};\n\nconst defaultClientTools = { clientTools: {} };\nconst defaultCallbacks: Callbacks = {\n  onConnect: () => {},\n  onDebug: () => {},\n  onDisconnect: () => {},\n  onError: () => {},\n  onMessage: () => {},\n  onAudio: () => {},\n  onModeChange: () => {},\n  onStatusChange: () => {},\n  onCanSendFeedbackChange: () => {},\n};\n\nconst HTTPS_API_ORIGIN = \"https://api.elevenlabs.io\";\n\nexport class Conversation {\n  public static async startSession(\n    options: SessionConfig &\n      Partial<Callbacks> &\n      Partial<ClientToolsConfig> &\n      Partial<InputConfig>\n  ): Promise<Conversation> {\n    const fullOptions: Options = {\n      ...defaultClientTools,\n      ...defaultCallbacks,\n      ...options,\n    };\n\n    fullOptions.onStatusChange({ status: \"connecting\" });\n    fullOptions.onCanSendFeedbackChange({ canSendFeedback: false });\n\n    let input: Input | null = null;\n    let connection: Connection | null = null;\n    let output: Output | null = null;\n    let preliminaryInputStream: MediaStream | null = null;\n\n    let wakeLock: WakeLockSentinel | null = null;\n    if (options.useWakeLock ?? true) {\n      try {\n        wakeLock = await navigator.wakeLock.request(\"screen\");\n      } catch (e) {\n        // Wake Lock is not required for the conversation to work\n      }\n    }\n\n    try {\n      // some browsers won't allow calling getSupportedConstraints or enumerateDevices\n      // before getting approval for microphone access\n      preliminaryInputStream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n      });\n\n      const delayConfig = options.connectionDelay ?? {\n        default: 0,\n        // Give the Android AudioManager enough time to switch to the correct audio mode\n        android: 3_000,\n      };\n      let delay = delayConfig.default;\n      if (isAndroidDevice()) {\n        delay = delayConfig.android ?? delay;\n      } else if (isIosDevice()) {\n        delay = delayConfig.ios ?? delay;\n      }\n\n      if (delay > 0) {\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n\n      connection = await Connection.create(options);\n      [input, output] = await Promise.all([\n        Input.create({\n          ...connection.inputFormat,\n          preferHeadphonesForIosDevices: options.preferHeadphonesForIosDevices,\n        }),\n        Output.create(connection.outputFormat),\n      ]);\n\n      preliminaryInputStream?.getTracks().forEach(track => track.stop());\n      preliminaryInputStream = null;\n\n      return new Conversation(fullOptions, connection, input, output, wakeLock);\n    } catch (error) {\n      fullOptions.onStatusChange({ status: \"disconnected\" });\n      preliminaryInputStream?.getTracks().forEach(track => track.stop());\n      connection?.close();\n      await input?.close();\n      await output?.close();\n      try {\n        await wakeLock?.release();\n        wakeLock = null;\n      } catch (e) {}\n      throw error;\n    }\n  }\n\n  private lastInterruptTimestamp: number = 0;\n  private mode: Mode = \"listening\";\n  private status: Status = \"connecting\";\n  private inputFrequencyData?: Uint8Array;\n  private outputFrequencyData?: Uint8Array;\n  private volume: number = 1;\n  private currentEventId: number = 1;\n  private lastFeedbackEventId: number = 1;\n  private canSendFeedback: boolean = false;\n\n  private constructor(\n    private readonly options: Options,\n    private readonly connection: Connection,\n    public readonly input: Input,\n    public readonly output: Output,\n    public wakeLock: WakeLockSentinel | null\n  ) {\n    this.options.onConnect({ conversationId: connection.conversationId });\n\n    this.connection.onDisconnect(this.endSessionWithDetails);\n    this.connection.onMessage(this.onMessage);\n\n    this.input.worklet.port.onmessage = this.onInputWorkletMessage;\n    this.output.worklet.port.onmessage = this.onOutputWorkletMessage;\n    this.updateStatus(\"connected\");\n  }\n\n  public endSession = () => this.endSessionWithDetails({ reason: \"user\" });\n\n  private endSessionWithDetails = async (details: DisconnectionDetails) => {\n    if (this.status !== \"connected\" && this.status !== \"connecting\") return;\n    this.updateStatus(\"disconnecting\");\n\n    try {\n      await this.wakeLock?.release();\n      this.wakeLock = null;\n    } catch (e) {}\n\n    this.connection.close();\n    await this.input.close();\n    await this.output.close();\n\n    this.updateStatus(\"disconnected\");\n    this.options.onDisconnect(details);\n  };\n\n  private updateMode = (mode: Mode) => {\n    if (mode !== this.mode) {\n      this.mode = mode;\n      this.options.onModeChange({ mode });\n    }\n  };\n\n  private updateStatus = (status: Status) => {\n    if (status !== this.status) {\n      this.status = status;\n      this.options.onStatusChange({ status });\n    }\n  };\n\n  private updateCanSendFeedback = () => {\n    const canSendFeedback = this.currentEventId !== this.lastFeedbackEventId;\n    if (this.canSendFeedback !== canSendFeedback) {\n      this.canSendFeedback = canSendFeedback;\n      this.options.onCanSendFeedbackChange({ canSendFeedback });\n    }\n  };\n\n  private onMessage = async (parsedEvent: IncomingSocketEvent) => {\n    switch (parsedEvent.type) {\n      case \"interruption\": {\n        if (parsedEvent.interruption_event) {\n          this.lastInterruptTimestamp = parsedEvent.interruption_event.event_id;\n        }\n        this.fadeOutAudio();\n        return;\n      }\n\n      case \"agent_response\": {\n        this.options.onMessage({\n          source: \"ai\",\n          message: parsedEvent.agent_response_event.agent_response,\n        });\n        return;\n      }\n\n      case \"user_transcript\": {\n        this.options.onMessage({\n          source: \"user\",\n          message: parsedEvent.user_transcription_event.user_transcript,\n        });\n        return;\n      }\n\n      case \"internal_tentative_agent_response\": {\n        this.options.onDebug({\n          type: \"tentative_agent_response\",\n          response:\n            parsedEvent.tentative_agent_response_internal_event\n              .tentative_agent_response,\n        });\n        return;\n      }\n\n      case \"client_tool_call\": {\n        if (\n          this.options.clientTools.hasOwnProperty(\n            parsedEvent.client_tool_call.tool_name\n          )\n        ) {\n          try {\n            const result =\n              (await this.options.clientTools[\n                parsedEvent.client_tool_call.tool_name\n              ](parsedEvent.client_tool_call.parameters)) ??\n              \"Client tool execution successful.\"; // default client-tool call response\n\n            // The API expects result to be a string, so we need to convert it if it's not already a string\n            const formattedResult =\n              typeof result === \"object\"\n                ? JSON.stringify(result)\n                : String(result);\n\n            this.connection.sendMessage({\n              type: \"client_tool_result\",\n              tool_call_id: parsedEvent.client_tool_call.tool_call_id,\n              result: formattedResult,\n              is_error: false,\n            });\n          } catch (e) {\n            this.onError(\n              \"Client tool execution failed with following error: \" +\n                (e as Error)?.message,\n              {\n                clientToolName: parsedEvent.client_tool_call.tool_name,\n              }\n            );\n            this.connection.sendMessage({\n              type: \"client_tool_result\",\n              tool_call_id: parsedEvent.client_tool_call.tool_call_id,\n              result: \"Client tool execution failed: \" + (e as Error)?.message,\n              is_error: true,\n            });\n          }\n        } else {\n          if (this.options.onUnhandledClientToolCall) {\n            this.options.onUnhandledClientToolCall(\n              parsedEvent.client_tool_call\n            );\n\n            return;\n          }\n\n          this.onError(\n            `Client tool with name ${parsedEvent.client_tool_call.tool_name} is not defined on client`,\n            {\n              clientToolName: parsedEvent.client_tool_call.tool_name,\n            }\n          );\n          this.connection.sendMessage({\n            type: \"client_tool_result\",\n            tool_call_id: parsedEvent.client_tool_call.tool_call_id,\n            result: `Client tool with name ${parsedEvent.client_tool_call.tool_name} is not defined on client`,\n            is_error: true,\n          });\n        }\n\n        return;\n      }\n\n      case \"audio\": {\n        if (this.lastInterruptTimestamp <= parsedEvent.audio_event.event_id) {\n          this.options.onAudio(parsedEvent.audio_event.audio_base_64);\n          this.addAudioBase64Chunk(parsedEvent.audio_event.audio_base_64);\n          this.currentEventId = parsedEvent.audio_event.event_id;\n          this.updateCanSendFeedback();\n          this.updateMode(\"speaking\");\n        }\n        return;\n      }\n\n      case \"ping\": {\n        this.connection.sendMessage({\n          type: \"pong\",\n          event_id: parsedEvent.ping_event.event_id,\n        });\n        // parsedEvent.ping_event.ping_ms can be used on client side, for example\n        // to warn if ping is too high that experience might be degraded.\n        return;\n      }\n\n      // unhandled events are expected to be internal events\n      default: {\n        this.options.onDebug(parsedEvent);\n        return;\n      }\n    }\n  };\n\n  private onInputWorkletMessage = (event: MessageEvent): void => {\n    const rawAudioPcmData = event.data[0];\n    const maxVolume = event.data[1];\n\n    // check if the sound was loud enough, so we don't send unnecessary chunks\n    // then forward audio to websocket\n    //if (maxVolume > 0.001) {\n    if (this.status === \"connected\") {\n      this.connection.sendMessage({\n        user_audio_chunk: arrayBufferToBase64(rawAudioPcmData.buffer),\n        //sample_rate: this.inputAudioContext?.inputSampleRate || this.inputSampleRate,\n      });\n    }\n    //}\n  };\n\n  private onOutputWorkletMessage = ({ data }: MessageEvent): void => {\n    if (data.type === \"process\") {\n      this.updateMode(data.finished ? \"listening\" : \"speaking\");\n    }\n  };\n\n  private addAudioBase64Chunk = (chunk: string) => {\n    this.output.gain.gain.value = this.volume;\n    this.output.worklet.port.postMessage({ type: \"clearInterrupted\" });\n    this.output.worklet.port.postMessage({\n      type: \"buffer\",\n      buffer: base64ToArrayBuffer(chunk),\n    });\n  };\n\n  private fadeOutAudio = () => {\n    // mute agent\n    this.updateMode(\"listening\");\n    this.output.worklet.port.postMessage({ type: \"interrupt\" });\n    this.output.gain.gain.exponentialRampToValueAtTime(\n      0.0001,\n      this.output.context.currentTime + 2\n    );\n\n    // reset volume back\n    setTimeout(() => {\n      this.output.gain.gain.value = this.volume;\n      this.output.worklet.port.postMessage({ type: \"clearInterrupted\" });\n    }, 2000); // Adjust the duration as needed\n  };\n\n  private onError = (message: string, context?: any) => {\n    console.error(message, context);\n    this.options.onError(message, context);\n  };\n\n  private calculateVolume = (frequencyData: Uint8Array) => {\n    if (frequencyData.length === 0) {\n      return 0;\n    }\n\n    // TODO: Currently this averages all frequencies, but we should probably\n    // bias towards the frequencies that are more typical for human voice\n    let volume = 0;\n    for (let i = 0; i < frequencyData.length; i++) {\n      volume += frequencyData[i] / 255;\n    }\n    volume /= frequencyData.length;\n\n    return volume < 0 ? 0 : volume > 1 ? 1 : volume;\n  };\n\n  public getId = () => this.connection.conversationId;\n\n  public isOpen = () => this.status === \"connected\";\n\n  public setVolume = ({ volume }: { volume: number }) => {\n    this.volume = volume;\n  };\n\n  public setMicMuted = (isMuted: boolean) => {\n    this.input.setMuted(isMuted);\n  };\n\n  public getInputByteFrequencyData = () => {\n    this.inputFrequencyData ??= new Uint8Array(\n      this.input.analyser.frequencyBinCount\n    );\n    this.input.analyser.getByteFrequencyData(this.inputFrequencyData);\n    return this.inputFrequencyData;\n  };\n\n  public getOutputByteFrequencyData = () => {\n    this.outputFrequencyData ??= new Uint8Array(\n      this.output.analyser.frequencyBinCount\n    );\n    this.output.analyser.getByteFrequencyData(this.outputFrequencyData);\n    return this.outputFrequencyData;\n  };\n\n  public getInputVolume = () => {\n    return this.calculateVolume(this.getInputByteFrequencyData());\n  };\n\n  public getOutputVolume = () => {\n    return this.calculateVolume(this.getOutputByteFrequencyData());\n  };\n\n  public sendFeedback = (like: boolean) => {\n    if (!this.canSendFeedback) {\n      console.warn(\n        this.lastFeedbackEventId === 0\n          ? \"Cannot send feedback: the conversation has not started yet.\"\n          : \"Cannot send feedback: feedback has already been sent for the current response.\"\n      );\n      return;\n    }\n\n    this.connection.sendMessage({\n      type: \"feedback\",\n      score: like ? \"like\" : \"dislike\",\n      event_id: this.currentEventId,\n    });\n    this.lastFeedbackEventId = this.currentEventId;\n    this.updateCanSendFeedback();\n  };\n\n  public sendContextualUpdate = (text: string) => {\n    this.connection.sendMessage({\n      type: \"contextual_update\",\n      text,\n    });\n  };\n}\n\nexport function postOverallFeedback(\n  conversationId: string,\n  like: boolean,\n  origin: string = HTTPS_API_ORIGIN\n) {\n  return fetch(`${origin}/v1/convai/conversations/${conversationId}/feedback`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      feedback: like ? \"like\" : \"dislike\",\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// Visualization module: canvas-based idle circle and reactive line driven by audio\nimport { createVisualizer } from './visualizers/registry.js';\n\nlet audioCtx = null;\nlet analyser = null;\nlet dataArray = null;\nlet rafId = null;\nlet canvas = null;\nlet ctx = null;\nlet vizState = 'idle'; // 'idle' | 'active' (state of the visualization)\nlet silentGainNode = null;\nconst mediaSourceMap = new WeakMap(); // HTMLMediaElement -> MediaElementAudioSourceNode\nconst streamSourceMap = new WeakMap(); // MediaStream -> MediaStreamAudioSourceNode\nconst playingEls = new Set();\nlet activeConversation = null;\nlet lastSdkBins = null;\n\n// Visualizer instance (pluggable)\nlet visualizerInstance = null;\nlet visualizerConfig = { mode: 'line', color: '#00ff80' };\nlet containerElement = null;\n\n// Debug helpers\nlet lastActive = false;\nlet silentFrames = 0;\nconst ACTIVE_THRESHOLD = 0.015; // RMS threshold\nconst SILENT_FRAME_LIMIT = 20; // ~0.33s at 60fps\n\nconst ensureAudioContext = async () => {\n  if (!audioCtx) audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n  if (audioCtx.state === 'suspended') {\n    try { await audioCtx.resume(); } catch {}\n  }\n};\n\nexport const updateVisualizerMode = (mode) => {\n    if (mode !== vizState) {\n        console.log('[viz] state ->', mode);\n        vizState = mode;\n    }\n};\n\nexport const configureVisualizer = (config, container = null) => {\n  if (config) {\n    visualizerConfig = { ...visualizerConfig, ...config };\n    console.log('[viz] config updated:', visualizerConfig);\n    // Recreate visualizer instance with new config\n    visualizerInstance = createVisualizer(visualizerConfig.mode || 'line', visualizerConfig);\n    \n    // Store container reference\n    if (container) {\n      containerElement = container;\n    }\n    \n    // Call setup method if visualizer has one\n    if (visualizerInstance && typeof visualizerInstance.setup === 'function' && containerElement) {\n      visualizerInstance.setup(containerElement);\n    }\n  }\n};\n\nconst buildAnalyserChain = (sourceNode) => {\n  analyser = (audioCtx && audioCtx.createAnalyser) ? audioCtx.createAnalyser() : null;\n  if (!analyser) return;\n  analyser.fftSize = 2048;\n  dataArray = new Uint8Array(analyser.frequencyBinCount);\n  try { sourceNode.disconnect(); } catch {}\n  sourceNode.connect(analyser);\n  // Keep graph alive but silent\n  if (!silentGainNode) {\n    silentGainNode = audioCtx.createGain();\n    silentGainNode.gain.value = 0.0;\n    silentGainNode.connect(audioCtx.destination);\n  }\n  try { analyser.disconnect(); } catch {}\n  analyser.connect(silentGainNode);\n};\n\nexport const connectMediaEl = async (el) => {\n  if (!(el instanceof HTMLMediaElement)) return;\n  await ensureAudioContext();\n  let source = mediaSourceMap.get(el);\n  if (!source) {\n    try { source = audioCtx.createMediaElementSource(el); } catch (e) { console.warn('[viz] createMediaElementSource failed', e); }\n    if (source) mediaSourceMap.set(el, source);\n  }\n  if (source) buildAnalyserChain(source);\n  try { el.crossOrigin = 'anonymous'; } catch {}\n  console.log('[viz] MediaElement connected', { src: el.currentSrc || el.src });\n  \n  // Track play/pause events to control visualization\n  el.addEventListener('play', () => {\n    playingEls.add(el);\n    updateVisualizerMode('active');\n    console.log('[viz] element play');\n  });\n  const onStop = () => {\n    playingEls.delete(el);\n    if (playingEls.size === 0) updateVisualizerMode('idle');\n    console.log('[viz] element stop/pause, playing count:', playingEls.size);\n  };\n  el.addEventListener('pause', onStop);\n  el.addEventListener('ended', onStop);\n};\n\nexport const connectMediaStream = async (stream) => {\n  if (!(stream instanceof MediaStream)) return;\n  await ensureAudioContext();\n  let source = streamSourceMap.get(stream);\n  if (!source) {\n    try { source = audioCtx.createMediaStreamSource(stream); } catch (e) { console.warn('[viz] createMediaStreamSource failed', e); }\n    if (source) streamSourceMap.set(stream, source);\n  }\n  if (source) buildAnalyserChain(source);\n  updateVisualizerMode('active');\n  console.log('[viz] MediaStream connected with tracks:', stream.getTracks().map(t => t.kind + ':' + t.readyState));\n  stream.getTracks().forEach(t => t.addEventListener('ended', () => {\n    if (stream.getTracks().every(tr => tr.readyState === 'ended')) {\n      updateVisualizerMode('idle');\n      console.log('[viz] stream ended');\n    }\n  }));\n};\n\nexport const observeMediaPlayback = () => {\n  const handler = async (type, target) => {\n    if (!(target instanceof HTMLMediaElement)) return;\n    if (type === 'play') {\n      await connectMediaEl(target);\n      playingEls.add(target);\n      updateVisualizerMode('active');\n      console.log('[viz] global play', target.tagName);\n    } else {\n      playingEls.delete(target);\n      if (playingEls.size === 0) updateVisualizerMode('idle');\n      console.log('[viz] global', type, 'playing count:', playingEls.size);\n    }\n  };\n  document.addEventListener('play', (e) => handler('play', e.target), true);\n  document.addEventListener('pause', (e) => handler('pause', e.target), true);\n  document.addEventListener('ended', (e) => handler('ended', e.target), true);\n};\n\nexport const hookConversationAudio = async (conv) => {\n  try {\n    if (!conv) return;\n    // Try element\n    const el = conv.audioElement || conv.audioEl || conv.audio;\n    if (el instanceof HTMLMediaElement) {\n      await connectMediaEl(el);\n      return;\n    }\n    // Try stream\n    const stream = conv.mediaStream || conv.outputStream || conv.remoteStream || conv.stream;\n    if (stream instanceof MediaStream) {\n      await connectMediaStream(stream);\n      return;\n    }\n    // Fallback: observe DOM for media created later\n    const mo = new MutationObserver((muts) => {\n      muts.forEach((mut) => {\n        mut.addedNodes?.forEach((n) => {\n          if (n instanceof HTMLMediaElement) connectMediaEl(n);\n          if (n.querySelectorAll) n.querySelectorAll('audio,video').forEach(connectMediaEl);\n        });\n      });\n    });\n    mo.observe(document.documentElement, { childList: true, subtree: true });\n  } catch (e) {\n    console.warn('[viz] hookConversationAudio failed', e);\n  }\n};\n\nexport const setActiveConversation = (conv) => {\n  activeConversation = conv;\n};\n\nconst initCanvas = (canvasId) => {\n  canvas = document.getElementById(canvasId);\n  if (!canvas) return;\n  ctx = canvas.getContext('2d');\n  const resize = () => {\n    const dpr = window.devicePixelRatio || 1;\n    const w = canvas.clientWidth || window.innerWidth;\n    const h = canvas.clientHeight || window.innerHeight;\n    canvas.width = Math.floor(w * dpr);\n    canvas.height = Math.floor(h * dpr);\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  };\n  resize();\n  window.addEventListener('resize', resize);\n};\n\nconst drawIdle = (tSec) => {\n  if (!visualizerInstance) return;\n  visualizerInstance.drawIdle(ctx, canvas, tSec);\n};\n\nconst drawActive = () => {\n  if (!visualizerInstance) return;\n  \n  const result = visualizerInstance.draw(ctx, canvas, analyser, dataArray, activeConversation, lastSdkBins);\n  const rms = result?.rms || 0;\n\n  // Debug: log when audio starts/stops\n  const isActive = rms > ACTIVE_THRESHOLD;\n  if (isActive && !lastActive) {\n    console.log('[viz] audio signal detected, rms=', rms.toFixed(3));\n  }\n  if (!isActive) {\n    silentFrames++;\n    if (lastActive && silentFrames > SILENT_FRAME_LIMIT) {\n      console.log('[viz] audio gone silent');\n    }\n  } else {\n    silentFrames = 0;\n  }\n  lastActive = isActive;\n};\n\nexport const initFullVisualizer = (canvasId = 'vizCanvas', config = null, container = null) => {\n  // Store container reference\n  if (container) {\n    containerElement = container;\n  }\n  \n  if (config) {\n    configureVisualizer(config, containerElement);\n  } else if (!visualizerInstance) {\n    // Initialize with default config\n    visualizerInstance = createVisualizer(visualizerConfig.mode, visualizerConfig);\n    // Call setup if we have a container\n    if (visualizerInstance && typeof visualizerInstance.setup === 'function' && containerElement) {\n      visualizerInstance.setup(containerElement);\n    }\n  }\n  \n  initCanvas(canvasId);\n  cancelAnimationFrame(rafId);\n  const tick = (tMs) => {\n    const tSec = tMs / 1000;\n    // Use vizState to determine if active or idle, not visualizer mode\n    if (vizState === 'active' || vizState === 'line') {\n      drawActive();\n    } else {\n      drawIdle(tSec);\n    }\n    rafId = requestAnimationFrame(tick);\n  };\n  rafId = requestAnimationFrame(tick);\n};\n","// Visualization modes registry\nimport { LineVisualizer } from './lineVisualizer.js';\nimport { ImageVisualizer } from './imageVisualizer.js';\n\nconst visualizerRegistry = {\n  line: LineVisualizer,\n  image: ImageVisualizer,\n  // Add more visualizer modes here in the future\n  // bars: BarsVisualizer,\n  // circle: CircleVisualizer,\n  // etc.\n};\n\nexport function createVisualizer(mode, config) {\n  const VisualizerClass = visualizerRegistry[mode];\n  if (!VisualizerClass) {\n    console.warn(`[viz] Unknown visualizer mode: ${mode}, falling back to 'line'`);\n    return new LineVisualizer(config);\n  }\n  return new VisualizerClass(config);\n}\n\nexport function registerVisualizer(mode, VisualizerClass) {\n  visualizerRegistry[mode] = VisualizerClass;\n}\n","// Line visualization mode\nexport class LineVisualizer {\n  constructor(config = {}) {\n    this.color = config.color || '#00ff80';\n    this.shadowBlur = config.shadowBlur || 16;\n    this.lineWidth = config.lineWidth || 3;\n    this.backgroundImage = config.backgroundImage || null;\n  }\n\n  setup(containerElement) {\n    // Setup background image for line visualizer\n    if (containerElement && this.backgroundImage) {\n      containerElement.style.setProperty('--bg-image', `url('${this.backgroundImage}')`);\n      containerElement.classList.add('has-bg');\n      console.log('[LineVisualizer] Background image configured:', this.backgroundImage);\n    }\n  }\n\n  draw(ctx, canvas, analyser, dataArray, activeConversation, lastSdkBins) {\n    if (!ctx || !canvas) return;\n    \n    const w = canvas.clientWidth;\n    const h = canvas.clientHeight;\n    ctx.clearRect(0, 0, w, h);\n    ctx.beginPath();\n    ctx.lineWidth = this.lineWidth;\n    ctx.strokeStyle = this.color;\n    ctx.shadowColor = this.color;\n    ctx.shadowBlur = this.shadowBlur;\n    const midY = Math.floor(h / 2);\n\n    let rms = 0;\n    if (analyser && dataArray) {\n      analyser.getByteTimeDomainData(dataArray);\n      // Remove DC offset to keep center exactly at midY\n      let mean = 0;\n      for (let i = 0; i < dataArray.length; i++) mean += dataArray[i];\n      mean /= dataArray.length; // around 128, but measured live\n      const step = w / dataArray.length;\n      let sum = 0;\n      for (let i = 0; i < dataArray.length; i++) {\n        const centered = (dataArray[i] - mean) / 128; // now ~-1..1 around 0\n        const x = i * step;\n        const y = midY + centered * (h * 0.22);\n        if (i === 0) ctx.moveTo(x, y); else ctx.lineTo(x, y);\n        sum += centered * centered;\n      }\n      rms = Math.sqrt(sum / dataArray.length);\n    } else if (activeConversation?.getOutputByteFrequencyData) {\n      try {\n        const res = activeConversation.getOutputByteFrequencyData();\n        if (res && typeof res.then === 'function') {\n          res.then((bins) => { lastSdkBins = bins; }).catch(() => {});\n        } else if (res instanceof Uint8Array) {\n          lastSdkBins = res;\n        }\n      } catch {}\n\n      const bins = lastSdkBins;\n      const len = bins?.length || 0;\n      if (len > 0) {\n        // Center bins by subtracting their average so graph oscillates equally\n        let avg = 0;\n        for (let i = 0; i < len; i++) avg += bins[i];\n        avg /= len || 1;\n        const step = w / len;\n        let sum = 0;\n        for (let i = 0; i < len; i++) {\n          const centered = (bins[i] - avg) / 255; // roughly -0.5..0.5\n          const x = i * step;\n          const y = midY + centered * 2 * (h * 0.22); // scale to ~-1..1\n          if (i === 0) ctx.moveTo(x, y); else ctx.lineTo(x, y);\n          sum += centered * centered;\n        }\n        rms = Math.sqrt(sum / len) / 1.1; // rough normalization\n      }\n    }\n\n    ctx.stroke();\n    return { rms };\n  }\n\n  drawIdle(ctx, canvas, tSec) {\n    if (!ctx || !canvas) return;\n    const w = canvas.clientWidth;\n    const h = canvas.clientHeight;\n    ctx.clearRect(0, 0, w, h);\n    const cx = w / 2;\n    const cy = h / 2;\n    const base = Math.min(w, h) * 0.12;\n    const r = base * (1 + 0.06 * Math.sin(tSec * 2 * Math.PI * 0.9));\n    ctx.shadowColor = this.color;\n    ctx.shadowBlur = 20;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.lineWidth;\n    ctx.beginPath();\n    ctx.arc(cx, cy, r, 0, Math.PI * 2);\n    ctx.stroke();\n  }\n}\n","// Image visualization mode\nexport class ImageVisualizer {\n  constructor(config = {}) {\n    console.log('[ImageVisualizer] Constructor called with config:', config);\n    this.mode = 'image';\n    this.interval = config.interval || 200; // ms between frames\n    this.talkImages = config.talk_images || [];\n    this.idleImages = config.idle_images || [];\n    this.backgroundColor = config.backgroundColor || '#000000';\n    \n    console.log('[ImageVisualizer] Talk images:', this.talkImages);\n    console.log('[ImageVisualizer] Idle images:', this.idleImages);\n    \n    // Preloaded images\n    this.talkImageElements = [];\n    this.idleImageElements = [];\n    this.imagesLoaded = false;\n    this.loadingPromise = null;\n    \n    // Animation state\n    this.currentTalkFrame = 0;\n    this.lastFrameTime = 0;\n    this.currentIdleImage = null;\n    \n    // Start preloading images\n    this.preloadImages();\n  }\n\n  setup(containerElement) {\n    // Setup background color for image visualizer\n    if (containerElement) {\n      containerElement.style.backgroundColor = this.backgroundColor;\n      console.log('[ImageVisualizer] Background color configured:', this.backgroundColor);\n      \n      // If there's a background image class, remove it for image mode\n      containerElement.classList.remove('has-bg');\n      containerElement.style.removeProperty('--bg-image');\n    }\n  }\n\n  async preloadImages() {\n    if (this.loadingPromise) return this.loadingPromise;\n    \n    this.loadingPromise = new Promise(async (resolve) => {\n      const loadImage = (src) => {\n        return new Promise((resolveImg, rejectImg) => {\n          const img = new Image();\n          img.onload = () => resolveImg(img);\n          img.onerror = () => {\n            console.warn(`[ImageVisualizer] Failed to load image: ${src}`);\n            rejectImg(new Error(`Failed to load ${src}`));\n          };\n          img.src = src;\n        });\n      };\n\n      try {\n        // Load all talk images\n        console.log('[ImageVisualizer] Preloading talk images:', this.talkImages);\n        const talkPromises = this.talkImages.map(src => loadImage(src).catch(() => null));\n        this.talkImageElements = (await Promise.all(talkPromises)).filter(img => img !== null);\n        \n        // Load all idle images\n        console.log('[ImageVisualizer] Preloading idle images:', this.idleImages);\n        const idlePromises = this.idleImages.map(src => loadImage(src).catch(() => null));\n        this.idleImageElements = (await Promise.all(idlePromises)).filter(img => img !== null);\n        \n        this.imagesLoaded = true;\n        console.log('[ImageVisualizer] All images preloaded successfully');\n        console.log(`  - Talk images: ${this.talkImageElements.length}`);\n        console.log(`  - Idle images: ${this.idleImageElements.length}`);\n        \n        // Pick random idle image\n        if (this.idleImageElements.length > 0) {\n          this.currentIdleImage = this.idleImageElements[\n            Math.floor(Math.random() * this.idleImageElements.length)\n          ];\n        }\n        \n        resolve();\n      } catch (error) {\n        console.error('[ImageVisualizer] Error preloading images:', error);\n        this.imagesLoaded = true; // Mark as loaded anyway to avoid blocking\n        resolve();\n      }\n    });\n    \n    return this.loadingPromise;\n  }\n\n  drawImage(ctx, canvas, img) {\n    if (!ctx || !canvas || !img) return;\n    \n    const w = canvas.clientWidth;\n    const h = canvas.clientHeight;\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, w, h);\n    \n    // Calculate scaling to fit image while maintaining aspect ratio\n    const imgAspect = img.width / img.height;\n    const canvasAspect = w / h;\n    \n    let drawWidth, drawHeight, drawX, drawY;\n    \n    if (imgAspect > canvasAspect) {\n      // Image is wider than canvas\n      drawWidth = w;\n      drawHeight = w / imgAspect;\n      drawX = 0;\n      drawY = (h - drawHeight) / 2;\n    } else {\n      // Image is taller than canvas\n      drawHeight = h;\n      drawWidth = h * imgAspect;\n      drawX = (w - drawWidth) / 2;\n      drawY = 0;\n    }\n    \n    // Draw image centered and scaled\n    ctx.drawImage(img, drawX, drawY, drawWidth, drawHeight);\n  }\n\n  draw(ctx, canvas, analyser, dataArray, activeConversation, lastSdkBins) {\n    if (!this.imagesLoaded || this.talkImageElements.length === 0) {\n      // Fallback: draw placeholder\n      this.drawPlaceholder(ctx, canvas, 'Loading...', '#00ff80');\n      return { rms: 0 };\n    }\n    \n    const now = performance.now();\n    \n    // Check if it's time to advance frame\n    if (now - this.lastFrameTime >= this.interval) {\n      this.currentTalkFrame = (this.currentTalkFrame + 1) % this.talkImageElements.length;\n      this.lastFrameTime = now;\n    }\n    \n    const currentImage = this.talkImageElements[this.currentTalkFrame];\n    this.drawImage(ctx, canvas, currentImage);\n    \n    // Calculate RMS for activity detection (simplified for image mode)\n    let rms = 0.5; // Always consider \"active\" when speaking\n    \n    return { rms };\n  }\n\n  drawIdle(ctx, canvas, tSec) {\n    if (!this.imagesLoaded) {\n      // Fallback: draw placeholder\n      this.drawPlaceholder(ctx, canvas, 'Loading...', '#00ff80');\n      return;\n    }\n    \n    if (this.idleImageElements.length === 0) {\n      // No idle images, draw placeholder\n      this.drawPlaceholder(ctx, canvas, 'Idle', '#00ff80');\n      return;\n    }\n    \n    // Draw current idle image\n    if (this.currentIdleImage) {\n      this.drawImage(ctx, canvas, this.currentIdleImage);\n    }\n    \n    // Optionally, change idle image every N seconds\n    // For now, we keep the same random idle image\n  }\n\n  drawPlaceholder(ctx, canvas, text, color) {\n    if (!ctx || !canvas) return;\n    \n    const w = canvas.clientWidth;\n    const h = canvas.clientHeight;\n    \n    ctx.clearRect(0, 0, w, h);\n    ctx.fillStyle = color;\n    ctx.font = '24px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(text, w / 2, h / 2);\n  }\n\n  // Method to change idle image (can be called externally or on timer)\n  changeIdleImage() {\n    if (this.idleImageElements.length > 0) {\n      this.currentIdleImage = this.idleImageElements[\n        Math.floor(Math.random() * this.idleImageElements.length)\n      ];\n    }\n  }\n\n  // Reset talk animation to first frame\n  resetTalkAnimation() {\n    this.currentTalkFrame = 0;\n    this.lastFrameTime = performance.now();\n  }\n}\n","// Subtitle component for displaying AI speech as dynamic captions\n// Integrates with 11Labs Conversation API onMessage callback\n\nlet subtitleContainer = null;\nlet currentSubtitle = null;\nlet blockQueue = []; // Queue of text blocks\nlet currentBlockWords = []; // Words in current block\nlet displayedWords = []; // Words already displayed\nlet isAnimating = false;\nlet animationInterval = null;\nlet blockTimeout = null;\n\n// Default configuration\nconst defaultConfig = {\n  enabled: true,\n  wordsPerSecond: 3, // Average speaking speed\n  fadeOutDelay: 2000, // Delay before fading out completed text\n  maxLines: 2, // Maximum lines to display\n  maxCharsPerLine: 40, // Approximate characters per line for breaking\n  blockDuration: 3000, // Duration to show each block before moving to next\n  position: 'bottom', // 'bottom', 'top', 'center'\n  fontSize: '2rem',\n  fontFamily: 'system-ui, -apple-system, sans-serif',\n  color: '#ffffff',\n  backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  textAlign: 'center',\n  padding: '1rem 2rem',\n  maxWidth: '80%',\n};\n\nlet config = { ...defaultConfig };\n\n// Initialize subtitle system\nexport const initSubtitles = (containerElement, customConfig = {}) => {\n  // Merge with defaults (customConfig overrides defaults)\n  config = { ...defaultConfig, ...customConfig };\n  \n  if (!containerElement) {\n    console.error('[subtitle] Container element not found');\n    return;\n  }\n\n  // Create or get subtitle container\n  subtitleContainer = containerElement.querySelector('.subtitle-container');\n  \n  if (!subtitleContainer) {\n    subtitleContainer = document.createElement('div');\n    subtitleContainer.className = 'subtitle-container';\n    applyStyles();\n    containerElement.appendChild(subtitleContainer);\n  }\n  \n  console.log('[subtitle] Initialized with config:', config);\n};\n\n// Apply CSS styles to subtitle container\nconst applyStyles = () => {\n  if (!subtitleContainer) return;\n  \n  const positions = {\n    bottom: { bottom: '5%', top: 'auto', transform: 'translateX(-50%)' },\n    top: { top: '5%', bottom: 'auto', transform: 'translateX(-50%)' },\n    center: { top: '50%', bottom: 'auto', transform: 'translate(-50%, -50%)' },\n  };\n  \n  const pos = positions[config.position] || positions.bottom;\n  \n  Object.assign(subtitleContainer.style, {\n    position: 'absolute',\n    left: '50%',\n    ...pos,\n    maxWidth: config.maxWidth,\n    width: 'auto',\n    padding: config.padding,\n    backgroundColor: config.backgroundColor,\n    color: config.color,\n    fontSize: config.fontSize,\n    fontFamily: config.fontFamily,\n    textAlign: config.textAlign,\n    borderRadius: '0.5rem',\n    pointerEvents: 'none',\n    zIndex: '1000',\n    opacity: '0',\n    transition: 'opacity 0.3s ease-in-out',\n    wordWrap: 'break-word',\n    lineHeight: '1.4',\n    textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n  });\n};\n\n// Configure subtitle system\nexport const configureSubtitles = (customConfig) => {\n  config = { ...config, ...customConfig };\n  if (subtitleContainer) {\n    applyStyles();\n  }\n  console.log('[subtitle] Configuration updated:', config);\n};\n\n// Enable/disable subtitles\nexport const setSubtitlesEnabled = (enabled) => {\n  config.enabled = enabled;\n  if (!enabled) {\n    clearSubtitles();\n  }\n  console.log('[subtitle] Enabled:', enabled);\n};\n\n// Main handler for conversation messages\nexport const handleConversationMessage = (message) => {\n  if (!config.enabled || !subtitleContainer) return;\n  \n  console.log('[subtitle] Message received:', message);\n  \n  // Filter out user messages - only show AI responses\n  // Check if message is from user\n  if (message.source === 'user' || message.role === 'user' || message.from === 'user') {\n    console.log('[subtitle] Ignoring user message');\n    return;\n  }\n  \n  // Handle different message types from 11Labs\n  if (message.type === 'conversation_initiation_metadata') {\n    // Conversation started\n    console.log('[subtitle] Conversation started');\n  } else if (message.type === 'audio' || message.type === 'message') {\n    // Audio message with transcript - only if from agent/assistant\n    if ((message.source === 'ai' || message.source === 'agent' || message.role === 'assistant' || !message.source) && (message.transcript || message.text)) {\n      const text = message.transcript || message.text;\n      displaySubtitle(text);\n    }\n  } else if (message.message && (message.source === 'ai' || message.source === 'agent' || !message.source)) {\n    // Generic message format from AI\n    displaySubtitle(message.message);\n  }\n};\n\n// Break text into blocks that fit within maxLines\nconst breakIntoBlocks = (text) => {\n  const words = text.trim().split(/\\s+/);\n  const blocks = [];\n  const maxCharsPerBlock = config.maxCharsPerLine * config.maxLines;\n  \n  let currentBlock = [];\n  let currentLength = 0;\n  \n  for (const word of words) {\n    const wordLength = word.length + 1; // +1 for space\n    \n    // Check if word ends with sentence-ending punctuation\n    const endsWithPunctuation = /[.!?]$/.test(word);\n    \n    // If adding this word exceeds the limit, start a new block\n    if (currentLength + wordLength > maxCharsPerBlock && currentBlock.length > 0) {\n      blocks.push(currentBlock.join(' '));\n      currentBlock = [word];\n      currentLength = wordLength;\n    } else {\n      currentBlock.push(word);\n      currentLength += wordLength;\n      \n      // If word ends with punctuation, complete the block (unless it would be too small)\n      if (endsWithPunctuation && currentLength >= config.maxCharsPerLine * 0.5) {\n        blocks.push(currentBlock.join(' '));\n        currentBlock = [];\n        currentLength = 0;\n      }\n    }\n  }\n  \n  // Add the last block if not empty\n  if (currentBlock.length > 0) {\n    blocks.push(currentBlock.join(' '));\n  }\n  \n  return blocks;\n};\n\n// Display subtitle in blocks\nconst displaySubtitle = (text) => {\n  if (!text || !subtitleContainer) return;\n  \n  console.log('[subtitle] Displaying:', text);\n  \n  // Clear previous animation\n  stopAnimation();\n  \n  // Break text into blocks\n  blockQueue = breakIntoBlocks(text);\n  console.log('[subtitle] Blocks:', blockQueue);\n  \n  // Start displaying blocks\n  displayNextBlock();\n};\n\n// Display next block in queue with word-by-word animation\nconst displayNextBlock = () => {\n  if (blockQueue.length === 0) {\n    // All blocks displayed\n    fadeOutAfterDelay();\n    return;\n  }\n  \n  // Get next block\n  const blockText = blockQueue.shift();\n  currentBlockWords = blockText.split(/\\s+/);\n  displayedWords = [];\n  \n  console.log('[subtitle] Showing block:', blockText);\n  \n  // Clear container and prepare for animation\n  subtitleContainer.textContent = '';\n  subtitleContainer.style.opacity = '1';\n  \n  // Start word-by-word animation\n  isAnimating = true;\n  const msPerWord = 1000 / config.wordsPerSecond;\n  \n  animationInterval = setInterval(() => {\n    if (currentBlockWords.length === 0) {\n      // Block complete, stop animation\n      clearInterval(animationInterval);\n      animationInterval = null;\n      isAnimating = false;\n      \n      // Calculate remaining time for this block based on its size\n      const wordCount = displayedWords.length;\n      const animationDuration = wordCount * msPerWord;\n      \n      // Use proportional duration: longer for full blocks, shorter for punctuation breaks\n      // Calculate how \"full\" the block is (0.0 to 1.0)\n      const blockText = displayedWords.join(' ');\n      const maxCharsPerBlock = config.maxCharsPerLine * config.maxLines;\n      const fillRatio = Math.min(1.0, blockText.length / maxCharsPerBlock);\n      \n      // Minimum pause: 500ms, maximum: blockDuration\n      const minPause = 500;\n      const maxPause = config.blockDuration;\n      const pauseDuration = minPause + (maxPause - minPause) * fillRatio;\n      \n      // Remaining time after animation\n      const remainingTime = Math.max(0, pauseDuration - animationDuration);\n      \n      console.log('[subtitle] Block stats:', {\n        words: wordCount,\n        chars: blockText.length,\n        fillRatio: fillRatio.toFixed(2),\n        pauseDuration: Math.round(pauseDuration),\n        remainingTime: Math.round(remainingTime)\n      });\n      \n      // Schedule next block or fade out\n      if (blockTimeout) clearTimeout(blockTimeout);\n      blockTimeout = setTimeout(() => {\n        if (blockQueue.length > 0) {\n          displayNextBlock();\n        } else {\n          fadeOutAfterDelay();\n        }\n      }, remainingTime);\n      return;\n    }\n    \n    // Add next word\n    const nextWord = currentBlockWords.shift();\n    displayedWords.push(nextWord);\n    \n    // Update display\n    subtitleContainer.textContent = displayedWords.join(' ');\n  }, msPerWord);\n};\n\n// Stop animation\nconst stopAnimation = () => {\n  if (animationInterval) {\n    clearInterval(animationInterval);\n    animationInterval = null;\n  }\n  if (blockTimeout) {\n    clearTimeout(blockTimeout);\n    blockTimeout = null;\n  }\n  isAnimating = false;\n  blockQueue = [];\n  currentBlockWords = [];\n  displayedWords = [];\n};\n\n// Fade out subtitle after delay\nconst fadeOutAfterDelay = () => {\n  setTimeout(() => {\n    if (subtitleContainer && !isAnimating) {\n      subtitleContainer.style.opacity = '0';\n      setTimeout(() => {\n        if (subtitleContainer && !isAnimating) {\n          subtitleContainer.textContent = '';\n        }\n      }, 300);\n    }\n  }, config.fadeOutDelay);\n};\n\n// Clear all subtitles immediately\nexport const clearSubtitles = () => {\n  stopAnimation();\n  if (subtitleContainer) {\n    subtitleContainer.style.opacity = '0';\n    setTimeout(() => {\n      if (subtitleContainer) {\n        subtitleContainer.textContent = '';\n      }\n    }, 300);\n  }\n};\n\n// Clean up subtitle system\nexport const destroySubtitles = () => {\n  stopAnimation();\n  if (subtitleContainer && subtitleContainer.parentNode) {\n    subtitleContainer.parentNode.removeChild(subtitleContainer);\n  }\n  subtitleContainer = null;\n  config.enabled = false;\n  console.log('[subtitle] Destroyed');\n};\n\n// Utility: Update subtitle text instantly (no animation)\nexport const setSubtitleText = (text) => {\n  if (!config.enabled || !subtitleContainer) return;\n  \n  stopAnimation();\n  subtitleContainer.textContent = text;\n  subtitleContainer.style.opacity = '1';\n  fadeOutAfterDelay();\n};\n"],"names":["base64ToArrayBuffer","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","blob","Blob","type","rawAudioProcessor","URL","createObjectURL","isIosDevice","includes","navigator","platform","userAgent","document","Input","context","analyser","worklet","inputStream","this","create","_ref","sampleRate","format","preferHeadphonesForIosDevices","Promise","resolve","_temp4","_temp2","audioWorklet","addModule","then","mediaDevices","getUserMedia","audio","options","_navigator$mediaDevic","source","createMediaStreamSource","AudioWorkletNode","port","postMessage","connect","resume","supportsSampleRateConstraint","getSupportedConstraints","AudioContext","createAnalyser","_temp","ideal","echoCancellation","noiseSuppression","_temp3","enumerateDevices","availableDevices","idealDevice","find","d","kind","keyword","label","toLowerCase","deviceId","_catch","error","_inputStream","_context","getTracks","forEach","track","stop","close","e","reject","_proto","prototype","setMuted","isMuted","audioConcatProcessor","Output","gain","createGain","destination","isValidSocketEvent","event","Connection","socket","conversationId","inputFormat","outputFormat","_this","queue","disconnectionDetails","onDisconnectCallback","onMessageCallback","addEventListener","setTimeout","disconnect","reason","message","code","parsedEvent","JSON","parse","data","push","_","config","origin","_config$origin","url","signedUrl","agentId","protocols","authorization","WebSocket","_socket","_config$overrides$age","_config$overrides$age2","_config$overrides$age3","_config$overrides$tts","overridesEvent","overrides","conversation_config_override","agent","prompt","first_message","firstMessage","language","tts","voice_id","voiceId","customLlmExtraBody","custom_llm_extra_body","dynamicVariables","dynamic_variables","send","stringify","once","conversation_initiation_metadata_event","console","warn","conversationConfig","conversation_id","agent_output_audio_format","user_input_audio_format","parseFormat","_socket2","sendMessage","onMessage","callback","onDisconnect","details","_this$onDisconnectCal","call","_format$split","split","formatPart","sampleRatePart","Error","parseInt","isNaN","defaultClientTools","clientTools","defaultCallbacks","onConnect","onDebug","onError","onAudio","onModeChange","onStatusChange","onCanSendFeedbackChange","Conversation","connection","input","output","wakeLock","_this2","_this3","lastInterruptTimestamp","mode","status","inputFrequencyData","outputFrequencyData","volume","currentEventId","lastFeedbackEventId","canSendFeedback","endSession","endSessionWithDetails","updateStatus","_this2$wakeLock","release","updateMode","updateCanSendFeedback","interruption_event","event_id","fadeOutAudio","agent_response_event","agent_response","user_transcription_event","user_transcript","response","tentative_agent_response_internal_event","tentative_agent_response","hasOwnProperty","client_tool_call","tool_name","parameters","result","formattedResult","String","tool_call_id","is_error","clientToolName","onUnhandledClientToolCall","audio_event","audio_base_64","addAudioBase64Chunk","ping_event","onInputWorkletMessage","b","user_audio_chunk","btoa","fromCharCode","apply","onOutputWorkletMessage","finished","chunk","value","exponentialRampToValueAtTime","currentTime","calculateVolume","frequencyData","getId","isOpen","setVolume","_ref2","setMicMuted","getInputByteFrequencyData","frequencyBinCount","getByteFrequencyData","getOutputByteFrequencyData","_this$outputFrequency","getInputVolume","getOutputVolume","sendFeedback","like","score","sendContextualUpdate","text","onmessage","startSession","_temp10","_options$connectionDe","_temp6","_Connection$create","all","_extends","_Promise$all","_preliminaryInputStre","preliminaryInputStream","fullOptions","_delayConfig$android","delayConfig","connectionDelay","default","android","delay","test","_delayConfig$ios","ios","_temp5","_preliminaryInputStre2","_connection","_input","_output","_temp8","_temp7","_wakeLock","_temp9","_options$useWakeLock","useWakeLock","request","_navigator$wakeLock$r","postOverallFeedback","fetch","method","body","feedback","headers"],"version":3,"file":"arapy-11labs.e02fbd41.js.map","sourceRoot":"/__parcel_source_root/"}